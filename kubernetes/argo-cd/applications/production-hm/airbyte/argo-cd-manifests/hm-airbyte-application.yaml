# https://github.com/airbytehq/airbyte-platform/blob/main/charts/airbyte/values.yaml
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: production-hm-airbyte
  namespace: production-hm-argo-cd
  labels:
    app.kubernetes.io/name: hm-airbyte
spec:
  project: production-hm
  sources:
    - repoURL: https://airbytehq.github.io/helm-charts
      # https://artifacthub.io/packages/helm/airbyte/airbyte
      targetRevision: 1.5.1
      chart: airbyte
      helm:
        releaseName: hm-airbyte
        values: |
          # https://docs.airbyte.com/deploying-airbyte/on-kubernetes-via-helm
          # https://github.com/airbytehq/airbyte-platform/blob/main/charts/airbyte/values.yaml
          ---
          global:
            image:
              registry: harbor.hongbomiao.com/docker-hub-proxy-cache
            airbyteUrl: https://airbyte.hongbomiao.com
            serviceAccountName: airbyte-admin
            auth:
              instanceAdmin:
                firstName: Hongbo
                lastName:  Miao
                secretName: hm-airbyte-secret
                emailSecretKey: AIRBYTE_ADMIN_EMAIL
                passwordSecretKey: AIRBYTE_ADMIN_PASSWORD
            storage:
              type: S3
              s3:
                authenticationType: credentials
                region: us-west-2
                accessKey:
                  existingSecret: hm-airbyte-secret
                  existingSecretKey: AWS_ACCESS_KEY_ID
                secretKey:
                  existingSecret: hm-airbyte-secret
                  existingSecretKey: AWS_SECRET_ACCESS_KEY
              storageSecretName: hm-airbyte-secret
              bucket:
                log: production-hm-airbyte
                state: production-hm-airbyte
                workloadOutput: production-hm-airbyte
            database:
              # https://github.com/airbytehq/airbyte/issues/43328#issuecomment-2474748419
              type: internal
              host: production-hm-airbyte-postgres.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com
              port: 5432
              database: airbyte_db
              secretName: hm-airbyte-secret
              userSecretKey: POSTGRES_USER_NAME
              passwordSecretKey: POSTGRES_PASSWORD
            logs:
              accessKey:
                existingSecret: hm-airbyte-secret
                existingSecretKey: AWS_ACCESS_KEY_ID
              secretKey:
                existingSecret: hm-airbyte-secret
                existingSecretKey: AWS_SECRET_ACCESS_KEY
            minio:
              enabled: false
            jobs:
              kube:
                images:
                  # https://gallery.ecr.aws/docker/library/busybox
                  busybox: harbor.hongbomiao.com/docker-hub-proxy-cache/busybox:1.37.0
                  # https://gallery.ecr.aws/groundcovercom/curl
                  curl: harbor.hongbomiao.com/docker-hub-proxy-cache/alpine/curl:8.12.0
                  # https://hub.docker.com/r/alpine/socat/tags
                  socat: harbor.hongbomiao.com/docker-hub-proxy-cache/alpine/socat:1.8.0.1
                # https://github.com/airbytehq/airbyte/issues/49938#issuecomment-2656958051
                serviceAccountName: airbyte-admin
              resources:
                requests:
                  cpu: 3000m
                  memory: 4Gi
                limits:
                  cpu: 4000m
                  memory: 8Gi
          serviceAccount:
            create: true
            name: airbyte-admin
          webapp:
            enabled: true
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
          server:
            enabled: true
            extraEnv:
              - name: STATE_STORAGE_S3_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AWS_ACCESS_KEY_ID
              - name: STATE_STORAGE_S3_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AWS_SECRET_ACCESS_KEY
              - name: STATE_STORAGE_S3_BUCKET_NAME
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AIRBYTE_LOG_S3_BUCKET_NAME
              - name: STATE_STORAGE_S3_REGION
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AIRBYTE_LOG_S3_BUCKET_REGION
            resources:
              requests:
                cpu: 500m
                memory: 2Gi
              limits:
                cpu: 1000m
                memory: 4Gi
          worker:
            enabled: true
            extraEnv:
              - name: STATE_STORAGE_S3_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AWS_ACCESS_KEY_ID
              - name: STATE_STORAGE_S3_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AWS_SECRET_ACCESS_KEY
              - name: STATE_STORAGE_S3_BUCKET_NAME
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AIRBYTE_LOG_S3_BUCKET_NAME
              - name: STATE_STORAGE_S3_REGION
                valueFrom:
                  secretKeyRef:
                    name: hm-airbyte-secret
                    key: AIRBYTE_LOG_S3_BUCKET_REGION
            resources:
              requests:
                cpu: 1000m
                memory: 1Gi
              limits:
                cpu: 2000m
                memory: 2Gi
          airbyte-bootloader:
            enabled: true
            resources:
              requests:
                cpu: 1000m
                memory: 512Mi
              limits:
                cpu: 2000m
                memory: 1Gi
          airbyte-api-server:
            enabled: false
          connector-builder-server:
            enabled: true
            resources:
              requests:
                cpu: 200m
                memory: 512Mi
              limits:
                cpu: 500m
                memory: 1Gi
          pod-sweeper:
            enabled: true
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
          cron:
            enabled: true
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                cpu: 200m
                memory: 1Gi
          temporal:
            enabled: true
            extraVolumes:
              - name: airbyte-config-map-volume
                configMap:
                  name: hm-airbyte-config-map
            extraVolumeMounts:
              - name: airbyte-config-map-volume
                subPath: amazon-rds-ca-global-bundle.pem
                mountPath: /etc/ssl/certs/amazon-rds-ca-global-bundle.pem
            extraEnv:
              # https://github.com/temporalio/docker-builds/blob/main/docker/auto-setup.sh
              # Ensure that the boolean values below are in string format
              - name: SKIP_DB_CREATE
                value: "true"
              - name: DBNAME
                value: temporal_db
              - name: VISIBILITY_DBNAME
                value: temporal_visibility_db
              - name: POSTGRES_TLS_ENABLED
                value: "true"
              - name: POSTGRES_TLS_DISABLE_HOST_VERIFICATION
                value: "false"
              - name: POSTGRES_TLS_CA_FILE
                value: /etc/ssl/certs/amazon-rds-ca-global-bundle.pem
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                cpu: 200m
                memory: 512Mi
          postgresql:
            enabled: false
          externalDatabase:
            host: production-hm-airbyte-postgres.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com
            port: 5432
            database: airbyte_db
            user: airbyte_user
            existingSecret: hm-airbyte-secret
            existingSecretPasswordKey: POSTGRES_PASSWORD
            jdbcUrl: jdbc:postgresql://production-hm-airbyte-postgres.xxxxxxxxxxxx.us-west-2.rds.amazonaws.com:5432/airbyte_db?ssl=true&sslmode=require
    - repoURL: git@github.com:hongbo-miao/hongbomiao.com.git
      targetRevision: main
      path: kubernetes/argo-cd/applications/production-hm/airbyte/kubernetes-manifests
  destination:
    namespace: production-hm-airbyte
    server: https://kubernetes.default.svc
  syncPolicy:
    syncOptions:
      - ServerSideApply=true
    automated:
      prune: true
