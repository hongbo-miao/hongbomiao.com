---
- name: Configure user access
  hosts: all
  become: true
  roles:
    - robertdebock.users
  vars:
    users_groups:
      - name: shared
        state: present
    users:
      - name: hongbo-miao
        group: sudo
        groups: [users, shared]
        sudo_options: "ALL=(ALL) NOPASSWD: ALL"
        password_lock: true
        authorized_keys:
          - "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPWhR5NV13iw0X8lKqsrSRqbcIJcA5AVMjyfJjOrplwH hongbo-miao"

- name: Create shared directory
  hosts: all
  become: true
  tasks:
    - name: Create shared directory
      ansible.builtin.file:
        path: /srv/shared
        state: directory
        owner: root
        group: shared
        mode: '2775'

- name: Install Cargo
  hosts: all
  become: true
  roles:
    - role: robertdebock.cargo

- name: Install common packages
  hosts: all
  tasks:
    - name: Install packages from apt
      become: true
      ansible.builtin.apt:
        name:
          - btop
          - ncdu
          - tshark
        state: present
    - name: Install packages from Snap
      become: true
      community.general.snap:
        name:
          - htop
          - nvtop
          - vnstat
        state: present
    - name: Install packages from Snap (classic confinement)
      become: true
      community.general.snap:
        name:
          - astral-uv
          - just
          - kubectl
          - zellij
        classic: true
        state: present
    - name: Install packages from Cargo
      become: true
      community.general.cargo:
        name:
          - fnm
          - ouch
        path: /usr/local

- name: Install Docker
  hosts: all
  become: true
  roles:
    - geerlingguy.docker
  vars:
    docker_edition: ce
    docker_packages:
      - "docker-{{ docker_edition }}"
      - "docker-{{ docker_edition }}-cli"
      - "docker-{{ docker_edition }}-rootless-extras"
    docker_packages_state: present

- name: Install NVIDIA CUDA Toolkit
  hosts: all
  become: true
  roles:
    - role: nvidia_cuda
  vars:
    nvidia_cuda_version: 13.0.1
    nvidia_cuda_driver_version: 580.82.07

- name: Install Rclone
  hosts: all
  roles:
    - role: stefangweichinger.ansible_rclone
      vars:
        # https://github.com/stefangweichinger/ansible-rclone/blob/main/defaults/main.yml
        rclone_arch: arm64
        rclone_config_location: "{{ ansible_env.HOME }}/.config/rclone/rclone.conf"
        rclone_config_owner:
          OWNER: "{{ ansible_env.USER }}"
          GROUP: "{{ ansible_env.USER }}"
        rclone_configs:
          - name: hm-s3
            properties:
              type: s3
              provider: AWS
              region: us-west-2
              storage_class: STANDARD
              access_key_id: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                35643735623839616262323630356332626638393930643866356235343938633631363564636231
                3738656534316365376666626166643663353032653431650a363639306465303839656234343931
                65626139626137633461393865323339623737383262366663653663316136323764643564393061
                3730366635386166660a396231393038626233386439333863383363343034643332646635303030
                39336632653764373162373630653332666138633363633239383334356436646638
              secret_access_key: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                64646138613535386234383331313439653434383239616137313363663636343231383137333834
                6633636666353764323035616634666337343235646438340a303466333763356135656436386532
                63346433346238336235643762393432633138613462626433653336643835653562653831383537
                6164353632646238630a383132663334643462616635373037366331373462393632303766333865
                66326464303037623839643430396566373832336364666261633261326530613830643561346565
                3133636366303031396632393836393834393232323231666361
          - name: hm-nebius
            properties:
              type: s3
              provider: AWS
              region: us-central1
              endpoint: https://storage.us-central1.nebius.cloud
              storage_class: STANDARD
              access_key_id: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                32383030373732396332366465326561386366323063396335356463386437313763373234623237
                3639643236363063343737613164373134333166346166340a656433353561303336663332323863
                35396436363036333065646434656663353637393465643430306236643230376365303939353135
                6631643431366163650a393538356362356633303966323965373931303039383466656161643663
                6338
              secret_access_key: !vault |
                $ANSIBLE_VAULT;1.1;AES256
                31303830383766656561623361613364326365323864363336393937363466336665333865386633
                3838646338356430383830323831636331366666326435340a616266343862653530343133316530
                36623038623430613333323338306339653866383832383031643066653764626233626166376165
                6431366663326265340a313139366266333334353038636461393233643330336530613038643838
                3633

- name: Deploy GitHub Actions Runner
  hosts: all
  become: true
  roles:
    - role: github_actions_runner
  vars:
    github_actions_runner_docker_image: myoung34/github-runner:2.328.0-ubuntu-noble
    github_actions_runner_repo_url: https://github.com/hongbo-miao/hongbomiao.com
    github_actions_runner_access_token: "{{ hostvars[inventory_hostname]['github_actions_runner_access_token'] }}"

- name: Deploy Kafka
  hosts: all
  become: true
  roles:
    - role: dragomirr.kafka
  vars:
    kafka_version: 3.8.0
    kafka_scala_version: 2.13
    kafka_java_version: 17
    kafka_install_dependencies: true
    kafka_heap_size: 2G
    kafka_topics:
      - name: production.iot.motor.proto
        replication_factor: 1
        partitions: 1
    kafka_additional_config:
      message.max.bytes: 1048576  # 1 MiB

- name: Deploy Ollama
  hosts: all
  become: true
  roles:
    - role: ollama
  vars:
    ollama_docker_image: docker.io/ollama/ollama:0.11.10
    ollama_port: 11434
    ollama_gpu_devices: "'\"device=0\"'"

- name: Deploy Speaches
  hosts: all
  become: true
  roles:
    - role: speaches
  vars:
    speaches_docker_image: ghcr.io/speaches-ai/speaches:0.8.2-cuda
    speaches_port: 34796
    speaches_gpu_devices: "'\"device=0\"'"
    speaches_hugging_face_hub_token: "{{ hostvars[inventory_hostname]['hugging_face_hub_token'] }}"

- name: Deploy vLLM
  hosts: all
  become: true
  roles:
    - role: vllm
  vars:
    vllm_docker_image: docker.io/vllm/vllm-openai:v0.10.1.1
    vllm_port: 44194
    vllm_model: Qwen/Qwen3-14B-AWQ
    vllm_max_model_len: 8192
    vllm_gpu_memory_utilization: 0.8
    vllm_tensor_parallel_size: 1
    vllm_gpu_devices: "'\"device=0\"'"
    vllm_tool_call_parser: hermes
    vllm_hugging_face_hub_token: "{{ hostvars[inventory_hostname]['hugging_face_hub_token'] }}"
