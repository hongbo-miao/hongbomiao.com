# https://docs.astral.sh/ruff/configuration/

exclude = [
  # Anywhere
  "**/*.DotSettings.user",
  "**/*.aliases",
  "**/*.asv",
  "**/*.cache",
  "**/*.cf",
  "**/*.ghw",
  "**/*.iml",
  "**/*.lvlps",
  "**/*.mexmaca64",
  "**/*.mexmaci64",
  "**/*.pdf",
  "**/*.slxc",
  "**/*.swc/**/*",
  "**/*.tfstate",
  "**/*.unsealed.yaml",
  "**/.DS_Store",
  "**/.ansible/**/*",
  "**/.coverage/**/*",
  "**/.deepeval/**/*",
  "**/.env.*.local",
  "**/.gitkeep",
  "**/.idea/**/*",
  "**/.pytest_cache/**/*",
  "**/.ruff_cache/**/*",
  "**/.terraform/**/*",
  "**/.vagrant/**/*",
  "**/.venv/**/*",
  "**/.vscode/**/*",
  "**/.windsurfrules",
  "**/__pycache__/**/*",
  "**/build/**/*",
  "**/cmake-build-debug/**/*",
  "**/codegen/**/*",
  "**/coverage.xml",
  "**/coverage/**/*",
  "**/data/**/*",
  "**/node_modules/**/*",
  "**/output/**/*",
  "**/secrets.auto.tfvars",
  "**/slprj/**/*",
  "**/target/**/*",

  # Root (Cannot have leading /)
  ".git/**/*",
  ".github/**/*",
  ".mypy_cache/**/*",
  "build-desktop-qt-Qt_*-Debug/**/*",
  "dump.rdb",
  "logs/**/*",
  "logs.log",
  "submodules/**/*",
  "vendor/**/*",
  "west-master-k3s.yaml",

  # Directories
  "aerospace/hm-openaerostruct/n2.html",
  "aerospace/hm-openaerostruct/reports/**/*",
  "api/api-go/config/config_loader/opal_auth_public_key.pem",
  "api/api-go/config/config_loader/server.crt",
  "api/api-go/config/config_loader/server.key",
  "api/api-go/coverage.txt",
  "api/api-node/.clinic/**/*",
  "api/api-node/.stryker-tmp/**/*",
  "api/api-node/public/**/*",
  "api/api-node/reports/**/*",
  "api/api-python/dist/**/*",
  "api/api-rust/models/**/*",
  "audio/whisper-cpp/models/**/*",
  "caddy/public/**/*",
  "cloud-cost/komiser/komiser.db",
  "cloud-platform/aws/aws-secrets-manager/secrets/*-credentials.json",
  "computational-fluid-dynamics/openfoam/simulations/*/0.*/**/*",
  "computational-fluid-dynamics/openfoam/simulations/*/constant/polyMesh/**/*",
  "data-orchestration/hm-prefect/workflows/*/*-deployment.yaml",
  "data-processing/flink/applications/*/.classpath",
  "data-processing/flink/applications/*/.project",
  "data-processing/flink/applications/*/.settings/**/*",
  "data-processing/flink/applications/*/dependency-reduced-pom.xml",
  "data-processing/flink/applications/*/src/main/resources/*.properties",
  "data-processing/hm-spark/applications/*/.bsp/**/*",
  "data-processing/kafka/kafka-client/kafka-c/*/config.ini",
  "data-transformation/dbt/projects/*/dbt_packages/**/*",
  "data-transformation/dbt/projects/*/logs/**/*",
  "data-visualization/grafana/hm-panel-plugin/.config/**/*",
  "data-visualization/metabase/plugins/**/*",
  "desktop-qt/CMakeLists.txt.user",
  "embedding/hm-imagebind/.checkpoints/**/*",
  "hardware-in-the-loop/national-instruments/veristand/VeriStandZeroMQBridge/VeriStandZeroMQBridge/bin/**/*",
  "hardware-in-the-loop/national-instruments/veristand/VeriStandZeroMQBridge/VeriStandZeroMQBridge/obj/**/*",
  "hardware-in-the-loop/national-instruments/veristand/VeriStandZeroMQBridge/packages/**/*",
  "infrastructure/hm-pulumi/passphrase.txt",
  "infrastructure/opentofu/environments/production/aws/storage/files/amazon-msk/*/plugins/*.zip",
  "kubernetes/certificates/**/*",
  "kubernetes/data/config-loader/**/*",
  "kubernetes/data/elastic-apm/**/*",
  "kubernetes/data/hasura/hasura-graphql-engine/**/*",
  "kubernetes/data/hm-alpine/**/*",
  "kubernetes/data/hm-kafka/hm-kafka/**/*",
  "kubernetes/data/hm-kafka/logging-kafka-connect/**/*",
  "kubernetes/data/hm-kafka/opa-kafka-connect/**/*",
  "kubernetes/data/minio/**/*",
  "kubernetes/data/model-server/model-store/**/*",
  "kubernetes/data/opal-server/**/*",
  "kubernetes/data/yugabyte/**/*",
  "kubernetes/manifests-raw/**/*",
  "llm-inference/llama-cpp/models/**/*",
  "llm-post-training/fine-tuning/hm-axolotl/last_run_prepared/**/*",
  "llm-post-training/fine-tuning/hm-llama-factory/saves/**/*",
  "llm-post-training/fine-tuning/hm-unsloth/unsloth_compiled_cache/**/*",
  "llm-post-training/fine-tuning/hm-unsloth/unsloth_training_checkpoints/**/*",
  "machine-learning/convolutional-neural-network/wandb/**/*",
  "machine-learning/graph-neural-network/dataset/**/*",
  "machine-learning/graph-neural-network/wandb/**/*",
  "machine-learning/hm-autogluon/AutogluonModels/**/*",
  "machine-learning/hm-mlflow/experiments/*/lightning_logs/**/*",
  "machine-learning/hm-mlflow/experiments/*/mlruns/**/*",
  "machine-learning/hm-mlflow/experiments/*/wandb/**/*",
  "machine-learning/hm-nvidia-modulus/launch.log",
  "machine-learning/neural-forecasting/*/lightning_logs/**/*",
  "mobile/mobile-android/.gradle/**/*",
  "mobile/mobile-android/local.properties",
  "mobile/mobile-ios/*.xcodeproj/**/*",
  "mobile/mobile-ios/*.xcworkspace/**/*",
  "mobile/mobile-ios/Derived/**/*",
  "mobile/mobile-ios/Tuist/.build/**/*",
  "mobile/mobile-ios/buildServer.json",
  "mobile/mobile-ios/cobertura.xml",
  "mobile/mobile-ios/mobile-ios/Resources/Audio/**/*",
  "mobile/mobile-react-native/.expo/**/*",
  "reverse-engineering/*/main",
  "robotics/robot-operating-system/bags/**/*",
  "robotics/robot-operating-system/install/**/*",
  "robotics/robot-operating-system/log/**/*",
  "web-cypress/cypress/fixtures/example.json",
  "web-cypress/cypress/screenshots/**/*",
  "web/.lighthouseci/**/*",
  "web/dist/**/*",
  "web/public/sitemap.xml",
  "web/storybook-static/**/*",
  "web/tmp/**/*",

  # .ruff.toml specific
  "**/*_pb2.py",
  "data-analytics/hm-marimo/src/main.py",
]

# https://docs.astral.sh/ruff/rules/
[lint]
select = [
  "A",     # flake8-builtins
  "AIR",   # Airflow
  "ANN",   # flake8-annotations
  "ARG",   # flake8-unused-arguments
  "ASYNC", # flake8-async
  "B",     # flake8-bugbear
  "BLE",   # flake8-blind-except
  "C4",    # flake8-comprehensions
  "C90",   # mccabe
  "COM",   # flake8-commas
  "D",     # pydocstyle
  "DTZ",   # flake8-datetimez
  "E",     # pycodestyle
  "EM",    # flake8-errmsg
  "EXE",   # flake8-executable
  "F",     # Pyflakes
  "FAST",  # FastAPI
  "FBT",   # flake8-boolean-trap
  "FIX",   # flake8-fixme
  "FLY",   # flynt
  "FURB",  # Refurb
  "G",     # flake8-logging-format
  "I",     # isort
  "ICN",   # flake8-import-conventions
  "INT",   # flake8-gettext
  "ISC",   # flake8-implicit-str-concat
  "LOG",   # flake8-logging
  "N",     # pep8-naming
  "NPY",   # NumPy
  "PD",    # pandas-vet
  "PERF",  # Perflint
  "PGH",   # pygrep-hooks
  "PIE",   # flake8-pie
  "PL",    # Pylint
  "PT",    # flake8-pytest-style
  "PTH",   # flake8-use-pathlib
  "PYI",   # flake8-pyi
  "Q",     # flake8-quotes
  "RET",   # flake8-return
  "RSE",   # flake8-raise
  "RUF",   # Ruff
  "S",     # flake8-bandit
  "SIM",   # flake8-simplify
  "SLF",   # flake8-self
  "SLOT",  # flake8-slots
  "T10",   # flake8-debugger
  "T20",   # flake8-print
  "TC",    # flake8-type-checking
  "TD",    # flake8-todos
  "TID",   # flake8-tidy-imports
  "TRY",   # tryceratops
  "UP",    # pyupgrade
  "W",     # pycodestyle
  # "CPY", # flake8-copyright
  # "DJ",  # flake8-django
  # "DOC", # pydoclint
  # "ERA", # eradicate
  # "FA",  # flake8-future-annotations
  # "INP", # flake8-no-pep420
  # "YTT", # flake8-2020
]
ignore = [
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D107",
  "D203",    # Conflicts with D211
  "D212",
  "E501",
  "FBT001",
  "FBT002",
  "G004",
  "ISC001",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "S101",
  "TC002",
  "TRY003",
]
