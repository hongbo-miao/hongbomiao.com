---
name: Test

"on":
  pull_request:
    branches: [main]
  schedule:
    - cron: 0 12 * * 0-6

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-22.04
    environment: test
    timeout-minutes: 10
    permissions:
      pull-requests: read
    outputs:
      api-go: ${{ steps.filter.outputs.api-go }}
      api-node: ${{ steps.filter.outputs.api-node }}
      api-python-flask: ${{ steps.filter.outputs.api-python-flask }}
      convolutional-neural-network: ${{ steps.filter.outputs.convolutional-neural-network }}
      grafana: ${{ steps.filter.outputs.grafana }}
      chatbot: ${{ steps.filter.outputs.chatbot }}
      hm-opal-client: ${{ steps.filter.outputs.hm-opal-client }}
      hm-prefect: ${{ steps.filter.outputs.hm-prefect }}
      mobile-android: ${{ steps.filter.outputs.mobile-android }}
      mobile-ios: ${{ steps.filter.outputs.mobile-ios }}
      mobile-react-native: ${{ steps.filter.outputs.mobile-react-native }}
      prometheus: ${{ steps.filter.outputs.prometheus }}
      streaming: ${{ steps.filter.outputs.streaming }}
      web: ${{ steps.filter.outputs.web }}
      web-cypress: ${{ steps.filter.outputs.web-cypress }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api-go:
              - 'api-go/**'
            api-node:
              - 'api-node/**'
            api-python-flask:
              - 'api-python-flask/**'
            convolutional-neural-network:
              - 'convolutional-neural-network/**'
            grafana:
              - 'grafana/**'
            chatbot:
              - 'chatbot/**'
            hm-opal-client:
              - 'hm-opal-client/**'
            hm-prefect:
              - 'hm-prefect/**'
            mobile-android:
              - 'mobile-android/**'
            mobile-ios:
              - 'mobile-ios/**'
            mobile-react-native:
              - 'mobile-react-native/**'
            prometheus:
              - 'prometheus/**'
            streaming:
              - 'streaming/**'
            web:
              - 'web/**'
            web-cypress:
              - 'web-cypress/**'

  mobile-ios-test:
    name: Mobile - iOS | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-ios == 'false' }}
    runs-on: macos-12
    environment: test
    timeout-minutes: 90
    env:
      # To use a Gemfile which is not at the root
      # https://github.com/ruby/setup-ruby#caching-bundle-install-automatically
      BUNDLE_GEMFILE: ${{ github.workspace }}/mobile-ios/Gemfile
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '14.1'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1.3'
          bundler-cache: true
      - name: Build
        working-directory: mobile-ios
        run: |
          xcodebuild build-for-testing \
            -project HMMobile.xcodeproj \
            -scheme HMMobile \
            -destination "platform=iOS Simulator,name=iPhone 14 Pro,OS=16.1"
      - name: Test
        uses: wandalen/wretry.action@v1.0.36
        with:
          current_path: mobile-ios
          command: |
            xcodebuild test-without-building \
              -project HMMobile.xcodeproj \
              -scheme HMMobile \
              -destination "platform=iOS Simulator,name=iPhone 14 Pro,OS=16.1"
          attempt_limit: 3
          attempt_delay: 2000
      - name: Convert coverage to Cobertura XML format
        working-directory: mobile-ios
        run: |
          bundle exec slather
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: mobile-ios
