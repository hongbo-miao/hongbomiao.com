name: Test

on:
  pull_request:
    branches:
      - main

jobs:
  lint-css-sol-md:
    name: Lint (CSS, Solidity, Markdown)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm ci
      - name: Lint CSS
        run: |
          npm run lint:css
      - name: Lint Solidity
        run: |
          npm run lint:sol
      - name: Lint Markdown
        run: |
          npm run lint:md

  lint-js:
    name: Lint (JavaScript)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd web && npm ci
          cd ../mobile && npm ci
          cd ../api-node && npm ci
          cd ../cypress && npm ci
          cd ../ethereum && npm ci
      - name: Lint JavaScript
        run: |
          npm run lint:js

  lint-go:
    name: Lint (Go)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint Go
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.40.1
          working-directory: api-go
          args: --timeout=3m

  lint-proto:
    name: Lint (Protocol Buffers)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint Protocol Buffers
        working-directory: api-go
        run: |
          docker run --rm --volume="$(pwd):/workspace" --workdir=/workspace bufbuild/buf lint

  lint-py:
    name: Lint (Python)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
      - name: Lint Python (Black)
        run: |
          poetry run poe lint-py-black
      - name: Lint Python (Flake8)
        run: |
          poetry run poe lint-py-flake8
      - name: Lint Python (isort)
        run: |
          poetry run poe lint-py-isort

  lint-dockerfile:
    name: Lint (Dockerfile)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint Dockerfile
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          dockerfile: '**/Dockerfile*'
          error_level: 2

  lint-kubernetes:
    name: Lint (Kubernetes)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint Kubernetes
        run: |
          docker run \
            --rm \
            --volume=`pwd`/kubernetes:/kubernetes \
            ghcr.io/yannh/kubeconform:latest \
              -kubernetes-version=1.23.4 \
              -ignore-filename-pattern=".*trafficsplit.yaml" \
              -ignore-filename-pattern=".*my-values.yaml" \
              -ignore-filename-pattern="kubernetes/manifests/argocd/" \
              -ignore-filename-pattern="kubernetes/manifests/elastic/" \
              -ignore-filename-pattern="kubernetes/manifests/kafka/" \
              -ignore-filename-pattern="kubernetes/manifests/prometheus/" \
              -ignore-filename-pattern="kubernetes/manifests/yugabyte/" \
              kubernetes/manifests/

  lint-shell:
    name: Lint (Shell)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Lint Shell
        run: |
          shellcheck $(git ls-files '**/*.sh')

  type-ts:
    name: Static Type Check (TypeScript)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd web && npm ci
          cd ../mobile && npm ci
          cd ../api-node && npm ci
          cd ../cypress && npm ci
          cd ../ethereum && npm ci
      - name: Check static type
        run: |
          cd web && npm run tsc
          cd ../mobile && npm run tsc
          cd ../api-node && npm run tsc
          cd ../cypress && npm run tsc
          cd ../ethereum && npm run tsc

  type-py:
    name: Static Type Check (Python)
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install Poetry
        uses: snok/install-poetry@v1.3.1
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry install --no-interaction --no-root
      - name: Check static type
        run: |
          poetry run poe mypy convolutional-neural-network --install-types --non-interactive
          poetry run poe mypy graph-neural-network --install-types --non-interactive
          poetry run poe mypy locust --install-types --non-interactive
          poetry run poe mypy hm-opal-client --install-types --non-interactive

  web-test:
    name: Web - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd web && npm ci
      - name: Test
        working-directory: web
        run: |
          npm test

  web-lighthouse:
    name: Web - Lighthouse
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Build
        working-directory: web
        run: |
          npm run build
      - name: Lighthouse
        working-directory: web
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npm run lighthouse

  # https://www.chromatic.com/docs/github-actions
  web-storybook:
    name: Web - Storybook
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to retrieve git history
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Build
        working-directory: web
        run: |
          npm run build
          npm run storybook:build
      - name: Publish storybook to Chromatic
        working-directory: web
        run: |
          npm run storybook:publish -- --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }} --exit-zero-on-changes

  mobile-test:
    name: Mobile - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd mobile && npm ci
      - name: Test
        working-directory: mobile
        run: |
          npm test

  api-go-test:
    name: API (Go) - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16.5'
      - name: Test
        working-directory: api-go
        run: |
          go test ./...

  api-node-test:
    name: API (Node.js) - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd api-node && npm ci
      - name: Test
        working-directory: api-node
        run: |
          npm test

  api-node-stryker:
    name: API (Node.js) - Stryker
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          cd api-node && npm ci
      - name: Stryker
        working-directory: api-node
        env:
          STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        run: |
          npm run test:stryker

  streaming-test:
    name: Streaming - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
          cache: 'maven'
      - name: Test
        working-directory: streaming
        run: |
          mvn test

  opa-test:
    name: OPA - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download OPA Binary
        run: |
          curl -L -o opa https://openpolicyagent.org/downloads/latest/opa_linux_amd64
          chmod 755 ./opa
      - name: Test
        run: |
          ./opa test api-go/internal/graphql_server/policies/*.rego -v

  rasa-test:
    name: Rasa - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Train and test
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workspace: ${{ github.workspace }}/chatbot

  prometheus-test:
    name: Prometheus - Test
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Test
        run: |
          docker build --file=Dockerfile.prometheus.test .

  hm-opal-client-build:
    name: HM OPAL Client - Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build Docker image
        run: |
          docker build --file=hm-opal-client/Dockerfile --tag=ghcr.io/hongbo-miao/hm-opal-client:latest .

  cypress:
    name: Cypress
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        working-directory: cypress
        run: |
          npm ci
      - name: Pull Docker images
        run: |
          docker-compose --file=docker-compose.cypress.yml pull
      - name: Cache Docker images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Build and run containers
        run: |
          docker-compose --file=docker-compose.cypress.yml up --detach
      - name: Cypress
        working-directory: cypress
        run: |
          npm run test:cypress:headless:5000

  coverage:
    name: Coverage
    needs: [web-test, mobile-test, api-node-test]
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache npm
        uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: |
          npm ci
          cd web && npm ci
          cd ../mobile && npm ci
          cd ../api-node && npm ci
      - name: Coverage
        run: |
          npm run test:coverage
          npm run test:coverage:publish
