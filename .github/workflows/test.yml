---
name: Test

'on':
  pull_request:
    branches:
      - main
  schedule:
    - cron: 23 10 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    permissions:
      pull-requests: read
    outputs:
      workflow: ${{ steps.filter.outputs.workflow }}
      amazon-sagemaker-pytorch-mnist: ${{ steps.filter.outputs.amazon-sagemaker-pytorch-mnist }}
      amazon-sagemaker-triton-resnet-50-deploy: ${{ steps.filter.outputs.amazon-sagemaker-triton-resnet-50-deploy }}
      amazon-sagemaker-triton-resnet-50-infer: ${{ steps.filter.outputs.amazon-sagemaker-triton-resnet-50-infer }}
      api-go: ${{ steps.filter.outputs.api-go }}
      api-node: ${{ steps.filter.outputs.api-node }}
      api-python: ${{ steps.filter.outputs.api-python }}
      api-rust: ${{ steps.filter.outputs.api-rust }}
      call-matlab-function-in-python: ${{ steps.filter.outputs.call-matlab-function-in-python }}
      convolutional-neural-network: ${{ steps.filter.outputs.convolutional-neural-network }}
      data-distribution-service: ${{ steps.filter.outputs.data-distribution-service }}
      dbt-hm-postgres: ${{ steps.filter.outputs.dbt-hm-postgres }}
      decode-can-blf-data: ${{ steps.filter.outputs.decode-can-blf-data }}
      decode-can-mf4-data: ${{ steps.filter.outputs.decode-can-mf4-data }}
      decode-can-trc-data: ${{ steps.filter.outputs.decode-can-trc-data }}
      delta-lake-read-delta-lake-by-amazon-athena: ${{ steps.filter.outputs.delta-lake-read-delta-lake-by-amazon-athena }}
      delta-lake-read-delta-lake-by-trino: ${{ steps.filter.outputs.delta-lake-read-delta-lake-by-trino }}
      delta-lake-write-to-delta-lake: ${{ steps.filter.outputs.delta-lake-write-to-delta-lake }}
      development-aws-glue-spark-scripts: ${{ steps.filter.outputs.development-aws-glue-spark-scripts }}
      ethereum: ${{ steps.filter.outputs.ethereum }}
      feature-store: ${{ steps.filter.outputs.feature-store }}
      flink-stream-tweets: ${{ steps.filter.outputs.flink-stream-tweets }}
      format-can-data: ${{ steps.filter.outputs.format-can-data }}
      grafana-hm-dashboard: ${{ steps.filter.outputs.grafana-hm-dashboard }}
      grafana-hm-panel-plugin: ${{ steps.filter.outputs.grafana-hm-panel-plugin }}
      graph-neural-network: ${{ steps.filter.outputs.graph-neural-network }}
      hm-aerosandbox: ${{ steps.filter.outputs.hm-aerosandbox }}
      hm-airflow: ${{ steps.filter.outputs.hm-airflow }}
      hm-autogluon: ${{ steps.filter.outputs.hm-autogluon }}
      hm-aws-parallelcluster: ${{ steps.filter.outputs.hm-aws-parallelcluster }}
      hm-cudf: ${{ steps.filter.outputs.hm-cudf }}
      hm-cuml: ${{ steps.filter.outputs.hm-cuml }}
      hm-cupy: ${{ steps.filter.outputs.hm-cupy }}
      hm-docling: ${{ steps.filter.outputs.hm-docling }}
      hm-duckdb-query-duckdb: ${{ steps.filter.outputs.hm-duckdb-query-duckdb }}
      hm-duckdb-query-lance: ${{ steps.filter.outputs.hm-duckdb-query-lance }}
      hm-duckdb-query-parquet: ${{ steps.filter.outputs.hm-duckdb-query-parquet }}
      hm-duckdb-query-protobuf: ${{ steps.filter.outputs.hm-duckdb-query-protobuf }}
      hm-faster-whisper: ${{ steps.filter.outputs.hm-faster-whisper }}
      hm-flax: ${{ steps.filter.outputs.hm-flax }}
      hm-genesis: ${{ steps.filter.outputs.hm-genesis }}
      hm-geopandas: ${{ steps.filter.outputs.hm-geopandas }}
      hm-gradio-classify-image: ${{ steps.filter.outputs.hm-gradio-classify-image }}
      hm-imagebind: ${{ steps.filter.outputs.hm-imagebind }}
      hm-jax: ${{ steps.filter.outputs.hm-jax }}
      hm-kubeflow-calculate: ${{ steps.filter.outputs.hm-kubeflow-calculate }}
      hm-kubeflow-classify-mnist: ${{ steps.filter.outputs.hm-kubeflow-classify-mnist }}
      hm-lancedb: ${{ steps.filter.outputs.hm-lancedb }}
      hm-langchain-chat-pdf: ${{ steps.filter.outputs.hm-langchain-chat-pdf }}
      hm-langgraph-chat-pdf: ${{ steps.filter.outputs.hm-langgraph-chat-pdf }}
      hm-llama-index-chat-pdf: ${{ steps.filter.outputs.hm-llama-index-chat-pdf }}
      hm-mlflow-classify-mnist: ${{ steps.filter.outputs.hm-mlflow-classify-mnist }}
      hm-mlflow-predict-diabetes: ${{ steps.filter.outputs.hm-mlflow-predict-diabetes }}
      hm-networkx: ${{ steps.filter.outputs.hm-networkx }}
      hm-numba: ${{ steps.filter.outputs.hm-numba }}
      hm-nvidia-modulus: ${{ steps.filter.outputs.hm-nvidia-modulus }}
      hm-opal-client: ${{ steps.filter.outputs.hm-opal-client }}
      hm-open3d: ${{ steps.filter.outputs.hm-open3d }}
      hm-openaerostruct: ${{ steps.filter.outputs.hm-openaerostruct }}
      hm-pandas: ${{ steps.filter.outputs.hm-pandas }}
      hm-polars: ${{ steps.filter.outputs.hm-polars }}
      hm-prefect-calculate: ${{ steps.filter.outputs.hm-prefect-calculate }}
      hm-prefect-greet: ${{ steps.filter.outputs.hm-prefect-greet }}
      hm-prefect-print-platform: ${{ steps.filter.outputs.hm-prefect-print-platform }}
      hm-protobuf: ${{ steps.filter.outputs.hm-protobuf }}
      hm-prowler: ${{ steps.filter.outputs.hm-prowler }}
      hm-pulumi: ${{ steps.filter.outputs.hm-pulumi }}
      hm-pyvista-mount-saint-helens: ${{ steps.filter.outputs.hm-pyvista-mount-saint-helens }}
      hm-rasa: ${{ steps.filter.outputs.hm-rasa }}
      hm-ray-calculate: ${{ steps.filter.outputs.hm-ray-calculate }}
      hm-ray-process-flight-data: ${{ steps.filter.outputs.hm-ray-process-flight-data }}
      hm-scikit-learn: ${{ steps.filter.outputs.hm-scikit-learn }}
      hm-serial: ${{ steps.filter.outputs.hm-serial }}
      hm-sglang: ${{ steps.filter.outputs.hm-sglang }}
      hm-skypilot: ${{ steps.filter.outputs.hm-skypilot }}
      hm-spark-analyze-coffee-customers: ${{ steps.filter.outputs.hm-spark-analyze-coffee-customers }}
      hm-spark-find-retired-people-python: ${{ steps.filter.outputs.hm-spark-find-retired-people-python }}
      hm-spark-find-retired-people-scala: ${{ steps.filter.outputs.hm-spark-find-retired-people-scala }}
      hm-spark-find-taxi-top-routes-sql: ${{ steps.filter.outputs.hm-spark-find-taxi-top-routes-sql }}
      hm-spark-find-taxi-top-routes: ${{ steps.filter.outputs.hm-spark-find-taxi-top-routes }}
      hm-spark-ingest-from-s3-to-kafka: ${{ steps.filter.outputs.hm-spark-ingest-from-s3-to-kafka }}
      hm-spark-recommend-movies: ${{ steps.filter.outputs.hm-spark-recommend-movies }}
      hm-streamlit-live-line-chart: ${{ steps.filter.outputs.hm-streamlit-live-line-chart }}
      hm-streamlit-map: ${{ steps.filter.outputs.hm-streamlit-map }}
      hm-sunpy: ${{ steps.filter.outputs.hm-sunpy }}
      hm-supervision-detect-objects: ${{ steps.filter.outputs.hm-supervision-detect-objects }}
      hm-triton: ${{ steps.filter.outputs.hm-triton }}
      hm-xxhash: ${{ steps.filter.outputs.hm-xxhash }}
      hugging-face-analyze-sentiment: ${{ steps.filter.outputs.hugging-face-analyze-sentiment }}
      iads-iads-config-reader: ${{ steps.filter.outputs.iads-iads-config-reader }}
      iads-iads-data-producer: ${{ steps.filter.outputs.iads-iads-data-producer }}
      iads-iads-data-reader: ${{ steps.filter.outputs.iads-iads-data-reader }}
      iads-zeromq-iads-bridge: ${{ steps.filter.outputs.iads-zeromq-iads-bridge }}
      kafka-rust-proto-consumer: ${{ steps.filter.outputs.kafka-rust-proto-consumer }}
      kafka-rust-proto-producer: ${{ steps.filter.outputs.kafka-rust-proto-producer }}
      kafka-rust-udp-kafka-bridge: ${{ steps.filter.outputs.kafka-rust-udp-kafka-bridge }}
      kafka-rust-zeromq-kafka-bridge: ${{ steps.filter.outputs.kafka-rust-zeromq-kafka-bridge }}
      lance: ${{ steps.filter.outputs.lance }}
      mineru: ${{ steps.filter.outputs.mineru }}
      mobile-android: ${{ steps.filter.outputs.mobile-android }}
      mobile-ios: ${{ steps.filter.outputs.mobile-ios }}
      mobile-react-native: ${{ steps.filter.outputs.mobile-react-native }}
      national-instruments-hm-pyvisa: ${{ steps.filter.outputs.national-instruments-hm-pyvisa }}
      national-instruments-hm-tdms: ${{ steps.filter.outputs.national-instruments-hm-tdms }}
      national-instruments-hm-veristand: ${{ steps.filter.outputs.national-instruments-hm-veristand }}
      national-instruments-veristand-zeromq-bridge: ${{ steps.filter.outputs.national-instruments-veristand-zeromq-bridge }}
      neural-forecasting-forecast-air-passenger-number: ${{ steps.filter.outputs.neural-forecasting-forecast-air-passenger-number }}
      nvidia-dali: ${{ steps.filter.outputs.nvidia-dali }}
      open-clip: ${{ steps.filter.outputs.open-clip }}
      pack-unpack-data: ${{ steps.filter.outputs.pack-unpack-data }}
      production-aws-glue-spark-scripts: ${{ steps.filter.outputs.production-aws-glue-spark-scripts }}
      prometheus: ${{ steps.filter.outputs.prometheus }}
      quantum-computing: ${{ steps.filter.outputs.quantum-computing }}
      reinforcement-learning-cart-pole: ${{ steps.filter.outputs.reinforcement-learning-cart-pole }}
      robot-operating-system: ${{ steps.filter.outputs.robot-operating-system }}
      stable-diffusion: ${{ steps.filter.outputs.stable-diffusion }}
      taichi-count-primes: ${{ steps.filter.outputs.taichi-count-primes }}
      taichi-fluid-solver: ${{ steps.filter.outputs.taichi-fluid-solver }}
      udp-receiver: ${{ steps.filter.outputs.udp-receiver }}
      udp-sender: ${{ steps.filter.outputs.udp-sender }}
      web-cypress: ${{ steps.filter.outputs.web-cypress }}
      web: ${{ steps.filter.outputs.web }}
      windows-calculator: ${{ steps.filter.outputs.windows-calculator }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            workflow:
              - '.github/workflows/test.yml'
            amazon-sagemaker-pytorch-mnist:
              - 'cloud-platform/aws/amazon-sagemaker/pytorch-mnist/**'
            amazon-sagemaker-triton-resnet-50-deploy:
              - 'machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy/**'
            amazon-sagemaker-triton-resnet-50-infer:
              - 'machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer/**'
            api-go:
              - 'api-go/**'
            api-node:
              - 'api-node/**'
            api-python:
              - 'api-python/**'
            api-rust:
              - 'api-rust/**'
            call-matlab-function-in-python:
              - 'matlab/call-matlab-function-in-python/**'
            decode-can-blf-data:
              - 'embedded-system/decode-can-blf-data/**'
            decode-can-mf4-data:
              - 'embedded-system/decode-can-mf4-data/**'
            decode-can-trc-data:
              - 'embedded-system/decode-can-trc-data/**'
            development-aws-glue-spark-scripts:
              - 'cloud-infrastructure/terraform/environments/development/aws/general/files/aws-glue/spark-scripts/**'
            production-aws-glue-spark-scripts:
              - 'cloud-infrastructure/terraform/environments/production/aws/general/files/aws-glue/spark-scripts/**'
            ethereum:
              - '.github/workflows/.lint.yml'
              - 'ethereum/**'
            format-can-data:
              - 'embedded-system/format-can-data/**'
            convolutional-neural-network:
              - 'machine-learning/convolutional-neural-network/**'
            data-distribution-service:
              - 'data-distribution-service/**'
            dbt-hm-postgres:
              - 'data-transformation/dbt/projects/dbt_hm_postgres/**'
            delta-lake-read-delta-lake-by-amazon-athena:
              - 'data-storage/delta-lake/read-delta-lake-by-amazon-athena/**'
            delta-lake-read-delta-lake-by-trino:
              - 'data-storage/delta-lake/read-delta-lake-by-trino/**'
            delta-lake-write-to-delta-lake:
              - 'data-storage/delta-lake/write-to-delta-lake/**'
            feature-store:
              - 'machine-learning/feature-store/**'
            flink-stream-tweets:
              - 'data-processing/flink/applications/stream-tweets/**'
            grafana-hm-dashboard:
              - 'data-visualization/grafana/hm-dashboard/**'
            grafana-hm-panel-plugin:
              - 'data-visualization/grafana/hm-panel-plugin/**'
            graph-neural-network:
              - 'machine-learning/graph-neural-network/**'
            hm-aerosandbox:
              - 'aerospace/hm-aerosandbox/**'
            hm-airflow:
              - 'data-orchestration/hm-airflow/**'
            hm-autogluon:
              - 'machine-learning/hm-autogluon/**'
            hm-aws-parallelcluster:
              - 'cloud-platform/aws/aws-parallelcluster/pcluster/**'
            hm-cudf:
              - 'data-analytics/hm-cudf/**'
            hm-cuml:
              - 'machine-learning/hm-cuml/**'
            hm-cupy:
              - 'data-analytics/hm-cupy/**'
            hm-docling:
              - 'machine-learning/hm-docling/**'
            hm-duckdb-query-duckdb:
              - 'data-storage/hm-duckdb/query-duckdb/**'
            hm-duckdb-query-lance:
              - 'data-storage/hm-duckdb/query-lance/**'
            hm-duckdb-query-parquet:
              - 'data-storage/hm-duckdb/query-parquet/**'
            hm-duckdb-query-protobuf:
              - 'data-storage/hm-duckdb/query-protobuf/**'
            hm-faster-whisper:
              - 'machine-learning/hm-faster-whisper/**'
            hm-flax:
              - 'machine-learning/hm-flax/**'
            hm-genesis:
              - 'physics/hm-genesis/**'
            hm-geopandas:
              - 'data-analytics/hm-geopandas/**'
            hm-gradio-classify-image:
              - 'machine-learning/hm-gradio/applications/classify-image/**'
            hm-imagebind:
              - 'computer-vision/hm-imagebind/**'
            hm-jax:
              - 'high-performance-computing/hm-jax/**'
            hm-kubeflow-calculate:
              - 'machine-learning/hm-kubeflow/pipelines/calculate/**'
            hm-kubeflow-classify-mnist:
              - 'machine-learning/hm-kubeflow/pipelines/classify-mnist/**'
            hm-lancedb:
              - 'data-storage/hm-lancedb/**'
            hm-langchain-chat-pdf:
              - 'machine-learning/hm-langchain/applications/chat-pdf/**'
            hm-langgraph-chat-pdf:
              - 'machine-learning/hm-langgraph/applications/chat-pdf/**'
            hm-llama-index-chat-pdf:
              - 'machine-learning/hm-llama-index/applications/chat-pdf/**'
            hm-mlflow-classify-mnist:
              - 'machine-learning/hm-mlflow/experiments/classify-mnist/**'
            hm-mlflow-predict-diabetes:
              - 'machine-learning/hm-mlflow/experiments/predict-diabetes/**'
            hm-networkx:
              - 'data-analytics/hm-networkx/**'
            hm-numba:
              - 'data-analytics/hm-numba/**'
            hm-nvidia-modulus:
              - 'machine-learning/hm-nvidia-modulus/**'
            hm-opal-client:
              - 'authorization/hm-opal-client/**'
            hm-open3d:
              - 'computer-vision/hm-open3d/**'
            hm-openaerostruct:
              - 'computer-vision/hm-openaerostruct/**'
            hm-pandas:
              - 'data-analytics/hm-pandas/**'
            hm-polars:
              - 'data-analytics/hm-polars/**'
            hm-prefect-calculate:
              - 'data-orchestration/hm-prefect/workflows/calculate/**'
            hm-prefect-greet:
              - 'data-orchestration/hm-prefect/workflows/greet/**'
            hm-prefect-print-platform:
              - 'data-orchestration/hm-prefect/workflows/print-platform/**'
            hm-protobuf:
              - 'data-storage/hm-protobuf/**'
            hm-prowler:
              - 'cloud-security/hm-prowler/**'
            hm-pulumi:
              - 'cloud-infrastructure/hm-pulumi/**'
            hm-pyvista-mount-saint-helens:
              - 'computer-vision/hm-pyvista/mount-saint-helens/**'
            hm-rasa:
              - 'machine-learning/hm-rasa/**'
            hm-ray-calculate:
              - 'cloud-computing/hm-ray/applications/calculate/**'
            hm-ray-process-flight-data:
              - 'cloud-computing/hm-ray/applications/process-flight-data/**'
            hm-scikit-learn:
              - 'machine-learning/hm-scikit-learn/**'
            hm-serial:
              - 'embedded-system/hm-serial/**'
            hm-sglang:
              - 'machine-learning/hm-sglang/**'
            hm-skypilot:
              - 'cloud-computing/hm-skypilot/**'
            hm-spark-analyze-coffee-customers:
              - 'data-processing/hm-spark/applications/analyze-coffee-customers/**'
            hm-spark-find-retired-people-python:
              - 'data-processing/hm-spark/applications/find-retired-people-python/**'
            hm-spark-find-retired-people-scala:
              - 'data-processing/hm-spark/applications/find-retired-people-scala/**'
            hm-spark-find-taxi-top-routes:
              - 'data-processing/hm-spark/applications/find-taxi-top-routes/**'
            hm-spark-find-taxi-top-routes-sql:
              - 'data-processing/hm-spark/applications/find-taxi-top-routes-sql/**'
            hm-spark-ingest-from-s3-to-kafka:
              - 'data-processing/hm-spark/applications/ingest-from-s3-to-kafka/**'
            hm-spark-recommend-movies:
              - 'data-processing/hm-spark/applications/recommend-movies/**'
            hm-streamlit-live-line-chart:
              - 'machine-learning/hm-streamlit/applications/live-line-chart/**'
            hm-streamlit-map:
              - 'machine-learning/hm-streamlit/applications/map/**'
            hm-sunpy:
              - 'scientific-computing/hm-sunpy/**'
            hm-supervision-detect-objects:
              - 'computer-vision/hm-supervision/detect-objects/**'
            hm-triton:
              - 'parallel-computing/hm-triton/**'
            hm-xxhash:
              - 'hm-xxhash/**'
            hugging-face-analyze-sentiment:
              - 'machine-learning/hugging-face/analyze-sentiment/**'
            iads-iads-config-reader:
              - 'data-visualization/iads/iads-iads-config-reader/**'
            iads-iads-data-reader:
              - 'data-visualization/iads/iads-iads-data-reader/**'
            iads-iads-data-producer:
              - 'data-visualization/iads/iads-rtstation/iads-data-producer/**'
            iads-zeromq-iads-bridge:
              - 'data-visualization/iads/iads-rtstation/zeromq-iads-bridge/**'
            kafka-rust-proto-consumer:
              - 'data-processing/kafka/kafka-client/kafka-rust/proto-consumer/**'
            kafka-rust-proto-producer:
              - 'data-processing/kafka/kafka-client/kafka-rust/proto-producer/**'
            kafka-rust-udp-kafka-bridge:
              - 'data-processing/kafka/kafka-client/kafka-rust/udp-kafka-bridge/**'
            kafka-rust-zeromq-kafka-bridge:
              - 'data-processing/kafka/kafka-client/kafka-rust/zeromq-kafka-bridge/**'
            lance:
              - 'data-storage/lance/**'
            mineru:
              - 'machine-learning/mineru/**'
            mobile-android:
              - 'mobile/mobile-android/**'
            mobile-ios:
              - 'mobile/mobile-ios/**'
            mobile-react-native:
              - 'mobile/mobile-react-native/**'
            national-instruments-hm-pyvisa:
              - 'hardware-in-the-loop/national-instruments/hm-pyvisa/**'
            national-instruments-hm-tdms:
              - 'hardware-in-the-loop/national-instruments/hm-tdms/**'
            national-instruments-hm-veristand:
              - 'hardware-in-the-loop/national-instruments/veristand/hm-veristand/**'
            national-instruments-veristand-zeromq-bridge:
              - 'hardware-in-the-loop/national-instruments/veristand/VeriStandZeroMQBridge/**'
            neural-forecasting-forecast-air-passenger-number:
              - 'machine-learning/neural-forecasting/forecast-air-passenger-number/**'
            nvidia-dali:
              - 'machine-learning/nvidia-dali/**'
            open-clip:
              - 'computer-vision/open-clip/**'
            pack-unpack-data:
              - 'embedded-system/pack-unpack-data/**'
            prometheus:
              - 'data-storage/prometheus/**'
            quantum-computing:
              - 'quantum-computing/**'
            reinforcement-learning-cart-pole:
              - 'machine-learning/reinforcement-learning/cart-pole/**'
            robot-operating-system:
              - 'robotics/robot-operating-system/**'
            stable-diffusion:
              - 'machine-learning/stable-diffusion/**'
            taichi-count-primes:
              - 'parallel-computing/hm-taichi/count-primes/**'
            taichi-fluid-solver:
              - 'parallel-computing/hm-taichi/fluid-solver/**'
            udp-receiver:
              - 'network-programmability/udp/udp-receiver/**'
            udp-sender:
              - 'network-programmability/udp/udp-sender/**'
            web:
              - 'web/**'
            web-cypress:
              - 'web-cypress/**'
            windows-calculator:
              - 'operating-system/windows/calculator/**'

  lint:
    name: Lint
    uses: ./.github/workflows/.lint.yml
    secrets: inherit
    needs: detect-changes
    with:
      api-go: ${{ needs.detect-changes.outputs.api-go == 'true' }}
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      api-rust: ${{ needs.detect-changes.outputs.api-rust == 'true' }}
      ethereum: ${{ needs.detect-changes.outputs.ethereum == 'true' }}
      grafana-hm-panel-plugin: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
      hm-spark-find-retired-people-scala: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-scala == 'true' }}
      hm-spark-ingest-from-s3-to-kafka: ${{ needs.detect-changes.outputs.hm-spark-ingest-from-s3-to-kafka == 'true' }}
      iads-iads-data-producer: ${{ needs.detect-changes.outputs.iads-iads-data-producer == 'true' }}
      iads-zeromq-iads-bridge: ${{ needs.detect-changes.outputs.iads-zeromq-iads-bridge == 'true' }}
      kafka-rust-proto-consumer: ${{ needs.detect-changes.outputs.kafka-rust-proto-consumer == 'true' }}
      kafka-rust-proto-producer: ${{ needs.detect-changes.outputs.kafka-rust-proto-producer == 'true' }}
      kafka-rust-udp-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-udp-kafka-bridge == 'true' }}
      kafka-rust-zeromq-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-zeromq-kafka-bridge == 'true' }}
      mobile-android: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
      mobile-react-native: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}
      national-instruments-veristand-zeromq-bridge: ${{ needs.detect-changes.outputs.national-instruments-veristand-zeromq-bridge == 'true' }}
      udp-receiver: ${{ needs.detect-changes.outputs.udp-receiver == 'true' }}
      udp-sender: ${{ needs.detect-changes.outputs.udp-sender == 'true' }}
      web-cypress: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
      web: ${{ needs.detect-changes.outputs.web == 'true' }}
      windows-calculator: ${{ needs.detect-changes.outputs.windows-calculator == 'true' }}

  static-type-check:
    name: Static Type Check
    uses: ./.github/workflows/.static-type-check.yml
    secrets: inherit
    needs: detect-changes
    with:
      api-go: ${{ needs.detect-changes.outputs.api-go == 'true' }}
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      ethereum: ${{ needs.detect-changes.outputs.ethereum == 'true' }}
      grafana-hm-panel-plugin: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
      mobile-android: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
      mobile-react-native: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}
      web-cypress: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
      web: ${{ needs.detect-changes.outputs.web == 'true' }}

  test-mobile:
    name: Test Mobile
    uses: ./.github/workflows/.test-mobile.yml
    secrets: inherit
    needs: detect-changes
    with:
      mobile-android: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
      mobile-ios: ${{ needs.detect-changes.outputs.mobile-ios == 'true' }}
      mobile-react-native: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}

  test-web:
    name: Test Web
    uses: ./.github/workflows/.test-web.yml
    secrets: inherit
    needs: detect-changes
    with:
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      web-cypress: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
      web: ${{ needs.detect-changes.outputs.web == 'true' }}

  test-api:
    name: Test API
    uses: ./.github/workflows/.test-api.yml
    secrets: inherit
    needs: detect-changes
    with:
      api-go: ${{ needs.detect-changes.outputs.api-go == 'true' }}
      api-node: ${{ needs.detect-changes.outputs.api-node == 'true' }}
      api-python: ${{ needs.detect-changes.outputs.api-python == 'true' }}
      api-rust: ${{ needs.detect-changes.outputs.api-rust == 'true' }}

  test-data-orchestration:
    name: Test Data Orchestration
    uses: ./.github/workflows/.test-data-orchestration.yml
    secrets: inherit
    needs: detect-changes
    with:
      hm-airflow: ${{ needs.detect-changes.outputs.hm-airflow == 'true' }}
      hm-prefect-calculate: ${{ needs.detect-changes.outputs.hm-prefect-calculate == 'true' }}
      hm-prefect-greet: ${{ needs.detect-changes.outputs.hm-prefect-greet == 'true' }}
      hm-prefect-print-platform: ${{ needs.detect-changes.outputs.hm-prefect-print-platform == 'true' }}

  test-data-processing:
    name: Test Data Processing
    uses: ./.github/workflows/.test-data-processing.yml
    secrets: inherit
    needs: detect-changes
    with:
      flink-stream-tweets: ${{ needs.detect-changes.outputs.flink-stream-tweets == 'true' }}
      hm-spark-analyze-coffee-customers: ${{ needs.detect-changes.outputs.hm-spark-analyze-coffee-customers == 'true' }}
      hm-spark-find-retired-people-python: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-python == 'true' }}
      hm-spark-find-retired-people-scala: ${{ needs.detect-changes.outputs.hm-spark-find-retired-people-scala == 'true' }}
      hm-spark-find-taxi-top-routes-sql: ${{ needs.detect-changes.outputs.hm-spark-find-taxi-top-routes-sql == 'true' }}
      hm-spark-find-taxi-top-routes: ${{ needs.detect-changes.outputs.hm-spark-find-taxi-top-routes == 'true' }}
      hm-spark-ingest-from-s3-to-kafka: ${{ needs.detect-changes.outputs.hm-spark-ingest-from-s3-to-kafka == 'true' }}
      hm-spark-recommend-movies: ${{ needs.detect-changes.outputs.hm-spark-recommend-movies == 'true' }}
      kafka-rust-proto-consumer: ${{ needs.detect-changes.outputs.kafka-rust-proto-consumer == 'true' }}
      kafka-rust-proto-producer: ${{ needs.detect-changes.outputs.kafka-rust-proto-producer == 'true' }}
      kafka-rust-udp-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-udp-kafka-bridge == 'true' }}
      kafka-rust-zeromq-kafka-bridge: ${{ needs.detect-changes.outputs.kafka-rust-zeromq-kafka-bridge == 'true' }}

  test-data-transformation:
    name: Test Data Transformation
    uses: ./.github/workflows/.test-data-transformation.yml
    secrets: inherit
    needs: detect-changes
    with:
      dbt-hm-postgres: ${{ needs.detect-changes.outputs.dbt-hm-postgres == 'true' }}

  test-data-storage:
    name: Test Data Storage
    uses: ./.github/workflows/.test-data-storage.yml
    secrets: inherit
    needs: detect-changes
    with:
      delta-lake-read-delta-lake-by-amazon-athena: ${{ needs.detect-changes.outputs.delta-lake-read-delta-lake-by-amazon-athena == 'true' }}
      delta-lake-read-delta-lake-by-trino: ${{ needs.detect-changes.outputs.delta-lake-read-delta-lake-by-trino == 'true' }}
      delta-lake-write-to-delta-lake: ${{ needs.detect-changes.outputs.delta-lake-write-to-delta-lake == 'true' }}
      hm-duckdb-query-duckdb: ${{ needs.detect-changes.outputs.hm-duckdb-query-duckdb == 'true' }}
      hm-duckdb-query-lance: ${{ needs.detect-changes.outputs.hm-duckdb-query-lance == 'true' }}
      hm-duckdb-query-parquet: ${{ needs.detect-changes.outputs.hm-duckdb-query-parquet == 'true' }}
      hm-duckdb-query-protobuf: ${{ needs.detect-changes.outputs.hm-duckdb-query-protobuf == 'true' }}
      hm-hdf5: ${{ needs.detect-changes.outputs.hm-hdf5 == 'true' }}
      hm-lancedb: ${{ needs.detect-changes.outputs.hm-lancedb == 'true' }}
      hm-protobuf: ${{ needs.detect-changes.outputs.hm-protobuf == 'true' }}
      lance: ${{ needs.detect-changes.outputs.lance == 'true' }}
      prometheus: ${{ needs.detect-changes.outputs.prometheus == 'true' }}

  test-data-analytics:
    name: Test Data Analytics
    uses: ./.github/workflows/.test-data-analytics.yml
    secrets: inherit
    needs: detect-changes
    with:
      hm-cudf: ${{ needs.detect-changes.outputs.hm-cudf == 'true' }}
      hm-cupy: ${{ needs.detect-changes.outputs.hm-cupy == 'true' }}
      hm-geopandas: ${{ needs.detect-changes.outputs.hm-geopandas == 'true' }}
      hm-networkx: ${{ needs.detect-changes.outputs.hm-networkx == 'true' }}
      hm-numba: ${{ needs.detect-changes.outputs.hm-numba == 'true' }}
      hm-pandas: ${{ needs.detect-changes.outputs.hm-pandas == 'true' }}
      hm-polars: ${{ needs.detect-changes.outputs.hm-polars == 'true' }}

  test-data-visualization:
    name: Test Data Visualization
    uses: ./.github/workflows/.test-data-visualization.yml
    secrets: inherit
    needs: detect-changes
    with:
      grafana-hm-dashboard: ${{ needs.detect-changes.outputs.grafana-hm-dashboard == 'true' }}
      grafana-hm-panel-plugin: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
      iads-iads-config-reader: ${{ needs.detect-changes.outputs.iads-iads-config-reader == 'true' }}
      iads-iads-data-producer: ${{ needs.detect-changes.outputs.iads-iads-data-producer == 'true' }}
      iads-iads-data-reader: ${{ needs.detect-changes.outputs.iads-iads-data-reader == 'true' }}
      iads-zeromq-iads-bridge: ${{ needs.detect-changes.outputs.iads-zeromq-iads-bridge == 'true' }}

  test-computing:
    name: Test Computing
    uses: ./.github/workflows/.test-computing.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Scientific Computing
      hm-sunpy: ${{ needs.detect-changes.outputs.hm-sunpy == 'true' }}
      # Parallel Computing
      hm-triton: ${{ needs.detect-changes.outputs.hm-triton == 'true' }}
      taichi-count-primes: ${{ needs.detect-changes.outputs.taichi-count-primes == 'true' }}
      taichi-fluid-solver: ${{ needs.detect-changes.outputs.taichi-fluid-solver == 'true' }}
      # High-Performance Computing
      hm-jax: ${{ needs.detect-changes.outputs.hm-jax == 'true' }}
      # Quantum Computing
      quantum-computing: ${{ needs.detect-changes.outputs.quantum-computing == 'true' }}
      # Cloud Computing
      hm-ray-calculate: ${{ needs.detect-changes.outputs.hm-ray-calculate == 'true' }}
      hm-ray-process-flight-data: ${{ needs.detect-changes.outputs.hm-ray-process-flight-data == 'true' }}
      hm-skypilot: ${{ needs.detect-changes.outputs.hm-skypilot == 'true' }}

  test-cloud:
    name: Test Cloud
    uses: ./.github/workflows/.test-cloud.yml
    secrets: inherit
    needs: detect-changes
    with:
      # Cloud Platform
      amazon-sagemaker-pytorch-mnist: ${{ needs.detect-changes.outputs.amazon-sagemaker-pytorch-mnist == 'true' }}
      hm-aws-parallelcluster: ${{ needs.detect-changes.outputs.hm-aws-parallelcluster == 'true' }}
      # Cloud Infrastructure
      hm-pulumi: ${{ needs.detect-changes.outputs.hm-pulumi == 'true' }}
      production-aws-glue-spark-scripts: ${{ needs.detect-changes.outputs.production-aws-glue-spark-scripts == 'true' }}
      # Cloud Security
      hm-prowler: ${{ needs.detect-changes.outputs.hm-prowler == 'true' }}

  test-machine-learning:
    name: Test Machine Learning
    uses: ./.github/workflows/.test-machine-learning.yml
    secrets: inherit
    needs: detect-changes
    with:
      amazon-sagemaker-triton-resnet-50-deploy: ${{ needs.detect-changes.outputs.amazon-sagemaker-triton-resnet-50-deploy == 'true' }}
      amazon-sagemaker-triton-resnet-50-infer: ${{ needs.detect-changes.outputs.amazon-sagemaker-triton-resnet-50-infer == 'true' }}
      convolutional-neural-network: ${{ needs.detect-changes.outputs.convolutional-neural-network == 'true' }}
      feature-store: ${{ needs.detect-changes.outputs.feature-store == 'true' }}
      graph-neural-network: ${{ needs.detect-changes.outputs.graph-neural-network == 'true' }}
      hm-autogluon: ${{ needs.detect-changes.outputs.hm-autogluon == 'true' }}
      hm-cuml: ${{ needs.detect-changes.outputs.hm-cuml == 'true' }}
      hm-docling: ${{ needs.detect-changes.outputs.hm-docling == 'true' }}
      hm-faster-whisper: ${{ needs.detect-changes.outputs.hm-faster-whisper == 'true' }}
      hm-flax: ${{ needs.detect-changes.outputs.hm-flax == 'true' }}
      hm-gradio-classify-image: ${{ needs.detect-changes.outputs.hm-gradio-classify-image == 'true' }}
      hm-kubeflow-calculate: ${{ needs.detect-changes.outputs.hm-kubeflow-calculate == 'true' }}
      hm-kubeflow-classify-mnist: ${{ needs.detect-changes.outputs.hm-kubeflow-classify-mnist == 'true' }}
      hm-langchain-chat-pdf: ${{ needs.detect-changes.outputs.hm-langchain-chat-pdf == 'true' }}
      hm-langgraph-chat-pdf: ${{ needs.detect-changes.outputs.hm-langgraph-chat-pdf == 'true' }}
      hm-llama-index-chat-pdf: ${{ needs.detect-changes.outputs.hm-llama-index-chat-pdf == 'true' }}
      hm-mlflow-classify-mnist: ${{ needs.detect-changes.outputs.hm-mlflow-classify-mnist == 'true' }}
      hm-mlflow-predict-diabetes: ${{ needs.detect-changes.outputs.hm-mlflow-predict-diabetes == 'true' }}
      hm-nvidia-modulus: ${{ needs.detect-changes.outputs.hm-nvidia-modulus == 'true' }}
      hm-rasa: ${{ needs.detect-changes.outputs.hm-rasa == 'true' }}
      hm-scikit-learn: ${{ needs.detect-changes.outputs.hm-scikit-learn == 'true' }}
      hm-sglang: ${{ needs.detect-changes.outputs.hm-sglang == 'true' }}
      hm-streamlit-live-line-chart: ${{ needs.detect-changes.outputs.hm-streamlit-live-line-chart == 'true' }}
      hm-streamlit-map: ${{ needs.detect-changes.outputs.hm-streamlit-map == 'true' }}
      hugging-face-analyze-sentiment: ${{ needs.detect-changes.outputs.hugging-face-analyze-sentiment == 'true' }}
      mineru: ${{ needs.detect-changes.outputs.mineru == 'true' }}
      neural-forecasting-forecast-air-passenger-number: ${{ needs.detect-changes.outputs.neural-forecasting-forecast-air-passenger-number == 'true' }}
      nvidia-dali: ${{ needs.detect-changes.outputs.nvidia-dali == 'true' }}
      reinforcement-learning-cart-pole: ${{ needs.detect-changes.outputs.reinforcement-learning-cart-pole == 'true' }}
      stable-diffusion: ${{ needs.detect-changes.outputs.stable-diffusion == 'true' }}

  test-computer-vision:
    name: Test Computer Vision
    uses: ./.github/workflows/.test-computer-vision.yml
    secrets: inherit
    needs: detect-changes
    with:
      hm-imagebind: ${{ needs.detect-changes.outputs.hm-imagebind == 'true' }}
      hm-open3d: ${{ needs.detect-changes.outputs.hm-open3d == 'true' }}
      hm-pyvista-mount-saint-helens: ${{ needs.detect-changes.outputs.hm-pyvista-mount-saint-helens == 'true' }}
      hm-supervision-detect-objects: ${{ needs.detect-changes.outputs.hm-supervision-detect-objects == 'true' }}
      open-clip: ${{ needs.detect-changes.outputs.open-clip == 'true' }}

  test-network-programmability:
    name: Test Network Programmability
    uses: ./.github/workflows/.test-network-programmability.yml
    secrets: inherit
    needs: detect-changes
    with:
      udp-receiver: ${{ needs.detect-changes.outputs.udp-receiver == 'true' }}
      udp-sender: ${{ needs.detect-changes.outputs.udp-sender == 'true' }}

  test-operating-system:
    name: Test Operating System
    uses: ./.github/workflows/.test-operating-system.yml
    secrets: inherit
    needs: detect-changes
    with:
      windows-calculator: ${{ needs.detect-changes.outputs.windows-calculator == 'true' }}

  test-embedded-system:
    name: Test Embedded System
    uses: ./.github/workflows/.test-embedded-system.yml
    secrets: inherit
    needs: detect-changes
    with:
      decode-can-blf-data: ${{ needs.detect-changes.outputs.decode-can-blf-data == 'true' }}
      decode-can-mf4-data: ${{ needs.detect-changes.outputs.decode-can-mf4-data == 'true' }}
      decode-can-trc-data: ${{ needs.detect-changes.outputs.decode-can-trc-data == 'true' }}
      format-can-data: ${{ needs.detect-changes.outputs.format-can-data == 'true' }}
      hm-serial: ${{ needs.detect-changes.outputs.hm-serial == 'true' }}
      pack-unpack-data: ${{ needs.detect-changes.outputs.pack-unpack-data == 'true' }}

  test-hardware-in-the-loop:
    name: Test Hardware-in-the-Loop
    uses: ./.github/workflows/.test-hardware-in-the-loop.yml
    secrets: inherit
    needs: detect-changes
    with:
      national-instruments-hm-pyvisa: ${{ needs.detect-changes.outputs.national-instruments-hm-pyvisa == 'true' }}
      national-instruments-hm-tdms: ${{ needs.detect-changes.outputs.national-instruments-hm-tdms == 'true' }}
      national-instruments-hm-veristand: ${{ needs.detect-changes.outputs.national-instruments-hm-veristand == 'true' }}

  test-aerospace:
    name: Test Aerospace
    uses: ./.github/workflows/.test-aerospace.yml
    secrets: inherit
    needs: detect-changes
    with:
      hm-aerosandbox: ${{ needs.detect-changes.outputs.hm-aerosandbox == 'true' }}
      hm-openaerostruct: ${{ needs.detect-changes.outputs.hm-openaerostruct == 'true' }}

  genesis-test:
    name: Genesis | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.hm-genesis == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.1
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: physics/hm-genesis/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version-file: physics/hm-genesis/pyproject.toml
      - name: Install dependencies
        working-directory: physics/hm-genesis
        run: |
          uv sync --dev
      - name: Test
        working-directory: physics/hm-genesis
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.0
        with:
          directory: physics/hm-genesis

  call-matlab-function-in-python:
    name: Call MATLAB Function in Python | Test
    needs: detect-changes
    if: ${{ false }}
    # if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.call-matlab-function-in-python == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2.3.0
        with:
          release: R2024a
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.1
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: matlab/call-matlab-function-in-python/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version-file: matlab/call-matlab-function-in-python/pyproject.toml
      - name: Install dependencies
        working-directory: matlab/call-matlab-function-in-python
        run: |
          uv sync --dev
      - name: Test
        working-directory: matlab/call-matlab-function-in-python
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.0
        with:
          directory: matlab/call-matlab-function-in-python

  data-distribution-service-test:
    name: Data Distribution Service | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.data-distribution-service == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.1
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: data-distribution-service/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version-file: data-distribution-service/pyproject.toml
      - name: Install dependencies
        working-directory: data-distribution-service
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-distribution-service
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.0
        with:
          directory: data-distribution-service

  xxhash-test:
    name: xxHash | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.hm-xxhash == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.2.1
        with:
          version: 0.5.20
          enable-cache: true
          cache-dependency-glob: hm-xxhash/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version-file: hm-xxhash/pyproject.toml
      - name: Install dependencies
        working-directory: hm-xxhash
        run: |
          uv sync --dev
      - name: Test
        working-directory: hm-xxhash
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.3.0
        with:
          directory: hm-xxhash

  opa-test:
    name: OPA | Test
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up OPA
        uses: open-policy-agent/setup-opa@v2.2.0
        with:
          version: 0.70.0
      - name: Test
        run: |
          opa test api-go/internal/graphql_server/policies/*.rego -v

  ros-test:
    name: ROS | Test
    needs: detect-changes
    if: ${{ false }}
    # if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.robot-operating-system == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 20
    container:
      image: ubuntu:noble
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Setup ROS
        uses: ros-tooling/setup-ros@0.7.9
        with:
          required-ros-distributions: jazzy
      - name: Build and test
        uses: ros-tooling/action-ros-ci@0.3.16
        with:
          package-name: turtle_robot
          target-ros2-distro: jazzy

  hm-opal-client-build:
    name: HM OPAL Client | Build
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.workflow == 'true' || needs.detect-changes.outputs.hm-opal-client == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0
      - name: Build Docker image
        uses: docker/build-push-action@v6.13.0
        with:
          context: .
          file: ./authorization/hm-opal-client/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max

  code-review:
    name: Code Review
    if: ${{ false }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Code Review
        uses: anc95/ChatGPT-CodeReview@v1.0.20
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
