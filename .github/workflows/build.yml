---
name: Build

"on":
  push:
    branches: [main]

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 10
    permissions:
      pull-requests: read
    outputs:
      api-go: ${{ steps.filter.outputs.api-go }}
      api-node: ${{ steps.filter.outputs.api-node }}
      api-python: ${{ steps.filter.outputs.api-python }}
      chatbot: ${{ steps.filter.outputs.chatbot }}
      hm-alpine: ${{ steps.filter.outputs.hm-alpine }}
      hm-keydb: ${{ steps.filter.outputs.hm-keydb }}
      hm-opal-client: ${{ steps.filter.outputs.hm-opal-client }}
      hm-prefect: ${{ steps.filter.outputs.hm-prefect }}
      hm-traefik: ${{ steps.filter.outputs.hm-traefik }}
      kafka-connect: ${{ steps.filter.outputs.kafka-connect }}
      streaming: ${{ steps.filter.outputs.streaming }}
      web: ${{ steps.filter.outputs.web }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            api-go:
              - '.github/workflows/docker.yml'
              - 'api-go/**'
            api-node:
              - '.github/workflows/docker.yml'
              - 'api-node/**'
            api-python:
              - '.github/workflows/docker.yml'
              - 'api-python/**'
            chatbot:
              - '.github/workflows/docker.yml'
              - 'chatbot/**'
            hm-alpine:
              - '.github/workflows/docker.yml'
              - 'hm-alpine/**'
            hm-keydb:
              - '.github/workflows/docker.yml'
              - 'hm-keydb/**'
            hm-opal-client:
              - '.github/workflows/docker.yml'
              - 'hm-opal-client/**'
            hm-prefect:
              - '.github/workflows/docker.yml'
              - 'hm-prefect/**'
            hm-traefik:
              - '.github/workflows/docker.yml'
              - 'hm-traefik/**'
            kafka-connect:
              - '.github/workflows/docker.yml'
              - 'kafka-connect/**'
            streaming:
              - '.github/workflows/docker.yml'
              - 'streaming/**'
            web:
              - '.github/workflows/docker.yml'
              - 'web/**'

  codeql:
    name: CodeQL
    uses: ./.github/workflows/.codeql.yml

  push-hm-web:
    name: Push hm-web to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.web == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./web/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-web:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-api-node:
    name: Push hm-api-node to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-node == 'true' || needs.detect-changes.outputs.web == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./api-node/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-api-node:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-api-python:
    name: Push hm-api-python to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-python == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./api-python/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-api-python:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-graphql-server:
    name: Push hm-graphql-server to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./api-go/build/package/graphql_server/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-graphql-server:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-grpc-server:
    name: Push hm-grpc-server to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./api-go/build/package/grpc_server/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-grpc-server:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-config-loader:
    name: Push hm-config-loader to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./api-go/build/package/config_loader/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-config-loader:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-decision-logger:
    name: Push hm-decision-logger to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-go == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./api-go/build/package/decision_logger/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-decision-logger:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-prefect-print-platform:
    name: Push hm-prefect-print-platform to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-prefect == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./hm-prefect/build/print_platform/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-prefect-print-platform:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-opal-client:
    name: Push hm-opal-client to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-opal-client == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./hm-opal-client/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-opal-client:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-kafka-connect:
    name: Push hm-kafka-connect to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.kafka-connect == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./kafka-connect/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-kafka-connect:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-rasa-action-server:
    name: Push hm-rasa-action-server to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.chatbot == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./chatbot/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-rasa-action-server:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-streaming:
    name: Push hm-streaming to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.streaming == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve the secret and decode it to a file
        working-directory: streaming/src/main/resources
        env:
          PROPERTIES_BASE64: ${{ secrets.HM_STEAMING_APPLICATION_PROPERTIES_BASE64 }}
        run: |
          echo $HM_STEAMING_APPLICATION_PROPERTIES_BASE64 | base64 --decode > application-production.properties
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./streaming/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-streaming:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-keydb:
    name: Push hm-keydb to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-keydb == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get redisgraph.so
        working-directory: hm-keydb
        run: |
          docker create --cidfile=/tmp/cid.txt redislabs/redisgraph:latest
          docker cp $(cat /tmp/cid.txt):/usr/lib/redis/modules/redisgraph.so ./modules/
          docker container rm $(cat /tmp/cid.txt)
          rm -f /tmp/cid.txt
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./hm-keydb/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-keydb:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-traefik:
    name: Push hm-traefik to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-traefik == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./hm-traefik/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-traefik:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000

  push-hm-alpine:
    name: Push hm-alpine to GitHub Container Registry
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.hm-alpine == 'true' }}
    runs-on: ubuntu-22.04
    environment: production
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: amd64,arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: wandalen/wretry.action@v1.0.36
        with:
          action: docker/build-push-action@v3
          with: |
            context: .
            file: ./hm-alpine/Dockerfile
            push: true
            tags: ghcr.io/hongbo-miao/hm-alpine:latest
            platforms: linux/amd64,linux/arm64
            cache-from: type=gha
            cache-to: type=gha,mode=max
          attempt_limit: 3
          attempt_delay: 2000
