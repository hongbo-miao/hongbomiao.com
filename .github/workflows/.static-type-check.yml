---
name: . Static Type Check

'on':
  workflow_call:

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    permissions:
      pull-requests: read
    outputs:
      # Languages
      python: ${{ steps.filter.outputs.python }}
      # Applications
      api-go: ${{ steps.filter.outputs.api-go }}
      api-node: ${{ steps.filter.outputs.api-node }}
      ethereum: ${{ steps.filter.outputs.ethereum }}
      grafana-hm-panel-plugin: ${{ steps.filter.outputs.grafana-hm-panel-plugin }}
      mobile-android: ${{ steps.filter.outputs.mobile-android }}
      mobile-react-native: ${{ steps.filter.outputs.mobile-react-native }}
      terraform: ${{ steps.filter.outputs.terraform }}
      web: ${{ steps.filter.outputs.web }}
      web-cypress: ${{ steps.filter.outputs.web-cypress }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            # Languages
            python:
              - '.github/workflows/.static-type-check.yml'
              - 'pyproject.toml'
              - 'uv.lock'
              - '.mypy.ini'
              - '**/*.py'
            # Applications
            api-node:
              - '.github/workflows/.static-type-check.yml'
              - 'api-node/**'
            ethereum:
              - '.github/workflows/.static-type-check.yml'
              - 'ethereum/**'
            grafana-hm-panel-plugin:
              - '.github/workflows/.static-type-check.yml'
              - 'data-visualization/grafana/hm-panel-plugin/**'
            mobile-android:
              - '.github/workflows/.static-type-check.yml'
              - 'mobile/mobile-android/**'
            mobile-react-native:
              - '.github/workflows/.static-type-check.yml'
              - 'mobile/mobile-react-native/**'
            terraform:
              - '.github/workflows/.static-type-check.yml'
              - 'cloud-infrastructure/terraform/**'
            web:
              - '.github/workflows/.static-type-check.yml'
              - 'web/**'
            web-cypress:
              - '.github/workflows/.static-type-check.yml'
              - 'web-cypress/**'

  static-type-check-kotlin-mobile-android:
    name: Kotlin (mobile-android)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-android == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Java
        uses: actions/setup-java@v4.6.0
        with:
          distribution: corretto
          java-version: '17'
          cache: gradle
      - name: Static type check Kotlin
        working-directory: mobile/mobile-android
        run: |
          ./gradlew detekt

  static-type-check-python:
    name: Python
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.python == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5.0.0
        with:
          version: 0.5.2
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version-file: pyproject.toml
      - name: Install dependencies
        run: |
          uv sync --dev
      - name: Static type check Python
        run: |
          uv run poe static-type-check-python --package=aerospace.hm-aerosandbox
          uv run poe static-type-check-python --package=aerospace.hm-openaerostruct
          uv run poe static-type-check-python --package=api-python
          uv run poe static-type-check-python --package=authorization.hm-opal-client
          uv run poe static-type-check-python --package=cloud-computing.hm-ray.applications.calculate
          uv run poe static-type-check-python --package=cloud-computing.hm-ray.applications.process-flight-data
          uv run poe static-type-check-python --package=cloud-platform.aws.amazon-sagemaker.pytorch-mnist
          uv run poe static-type-check-python --package=cloud-platform.aws.aws-parallelcluster.pcluster
          uv run poe static-type-check-python --package=computer-vision.hm-open3d
          uv run poe static-type-check-python --package=computer-vision.hm-pyvista.mount-saint-helens
          uv run poe static-type-check-python --package=data-analytics.hm-cudf
          uv run poe static-type-check-python --package=data-analytics.hm-geopandas
          uv run poe static-type-check-python --package=data-analytics.hm-pandas
          uv run poe static-type-check-python --package=data-analytics.hm-polars
          uv run poe static-type-check-python --package=data-distribution-service
          uv run poe static-type-check-python --package=data-orchestration.hm-airflow
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.calculate
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.greet
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.print-platform
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.analyze-coffee-customers
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.find-retired-people-python
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.find-taxi-top-routes
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.find-taxi-top-routes-sql
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.recommend-movies
          uv run poe static-type-check-python --package=data-storage.delta-lake.read-delta-lake-by-amazon-athena
          uv run poe static-type-check-python --package=data-storage.delta-lake.read-delta-lake-by-trino
          uv run poe static-type-check-python --package=data-storage.delta-lake.write-to-delta-lake
          uv run poe static-type-check-python --package=data-storage.hm-duckdb
          uv run poe static-type-check-python --package=data-storage.hm-protobuf
          uv run poe static-type-check-python --package=data-visualization.grafana.hm-dashboard
          uv run poe static-type-check-python --package=data-visualization.iads.iads-data-manager.iads-config-reader
          uv run poe static-type-check-python --package=data-visualization.iads.iads-data-manager.iads-data-reader
          uv run poe static-type-check-python --package=embedded.decode-can-data
          uv run poe static-type-check-python --package=embedded.format-can-data
          uv run poe static-type-check-python --package=embedded.hm-serial
          uv run poe static-type-check-python --package=hardware-in-the-loop.national-instruments.hm-pyvisa
          uv run poe static-type-check-python --package=hardware-in-the-loop.national-instruments.hm-tdms
          uv run poe static-type-check-python --package=hardware-in-the-loop.national-instruments.veristand.hm-veristand
          uv run poe static-type-check-python --package=hm-locust
          uv run poe static-type-check-python --package=hm-xxhash
          uv run poe static-type-check-python --package=machine-learning.convolutional-neural-network
          uv run poe static-type-check-python --package=machine-learning.dali
          uv run poe static-type-check-python --package=machine-learning.feature-store
          uv run poe static-type-check-python --package=machine-learning.graph-neural-network
          uv run poe static-type-check-python --package=machine-learning.hm-gradio.applications.classify-image
          uv run poe static-type-check-python --package=machine-learning.hm-kubeflow.pipelines.calculate
          uv run poe static-type-check-python --package=machine-learning.hm-kubeflow.pipelines.classify-mnist
          uv run poe static-type-check-python --package=machine-learning.hm-langchain.applications.chat-pdf
          uv run poe static-type-check-python --package=machine-learning.hm-mlflow.experiments.classify-mnist
          uv run poe static-type-check-python --package=machine-learning.hm-mlflow.experiments.predict-diabetes
          uv run poe static-type-check-python --package=machine-learning.hm-rasa
          uv run poe static-type-check-python --package=machine-learning.hm-streamlit.applications.live-line-chart
          uv run poe static-type-check-python --package=machine-learning.hm-streamlit.applications.map
          uv run poe static-type-check-python --package=machine-learning.hm-supervision.detect-objects
          uv run poe static-type-check-python --package=machine-learning.hugging-face
          uv run poe static-type-check-python --package=machine-learning.neural-forecasting.forecast-air-passenger-number
          uv run poe static-type-check-python --package=machine-learning.reinforcement-learning.cart-pole
          uv run poe static-type-check-python --package=machine-learning.triton.amazon-sagamaker-triton-resnet-50.deploy
          uv run poe static-type-check-python --package=machine-learning.triton.amazon-sagamaker-triton-resnet-50.infer
          uv run poe static-type-check-python --package=quantum-computing

  static-type-check-terraform-production-aws:
    name: Terraform (production/aws)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.terraform == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Initialize Terraform
        working-directory: cloud-infrastructure/terraform/environments/production/aws
        run: |
          terraform init -backend=false
      - name: Static type check Terraform
        working-directory: cloud-infrastructure/terraform/environments/production/aws
        run: |
          terraform validate

  static-type-check-terraform-production-snowflake:
    name: Terraform (production/snowflake)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.terraform == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Initialize Terraform
        working-directory: cloud-infrastructure/terraform/environments/production/snowflake
        run: |
          terraform init -backend=false
      - name: Static type check Terraform
        working-directory: cloud-infrastructure/terraform/environments/production/snowflake
        run: |
          terraform validate

  static-type-check-typescript-api-node:
    name: TypeScript (api-node)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.api-node == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: api-node/.node-version
          cache: npm
          cache-dependency-path: api-node/package-lock.json
      - name: Install dependencies
        working-directory: api-node
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: api-node
        run: |
          npm run tsc

  static-type-check-typescript-ethereum:
    name: TypeScript (ethereum)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.ethereum == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: ethereum/.node-version
          cache: npm
          cache-dependency-path: ethereum/package-lock.json
      - name: Install dependencies
        working-directory: ethereum
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: ethereum
        run: |
          npm run tsc

  static-type-check-typescript-grafana-hm-panel-plugin:
    name: TypeScript (grafana-hm-panel-plugin)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.grafana-hm-panel-plugin == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: data-visualization/grafana/hm-panel-plugin/.node-version
          cache: npm
          cache-dependency-path: data-visualization/grafana/hm-panel-plugin/package-lock.json
      - name: Install dependencies
        working-directory: data-visualization/grafana/hm-panel-plugin
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: data-visualization/grafana/hm-panel-plugin
        run: |
          npm run tsc

  static-type-check-typescript-mobile-react-native:
    name: TypeScript (mobile-react-native)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.mobile-react-native == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: mobile/mobile-react-native/.node-version
          cache: npm
          cache-dependency-path: mobile/mobile-react-native/package-lock.json
      - name: Install dependencies
        working-directory: mobile/mobile-react-native
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: mobile/mobile-react-native
        run: |
          npm run tsc

  static-type-check-typescript-web:
    name: TypeScript (web)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.web == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: web/.node-version
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: web
        run: |
          npm run tsc

  static-type-check-typescript-web-cypress:
    name: TypeScript (web-cypress)
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.web-cypress == 'true' }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version-file: web-cypress/.node-version
          cache: npm
          cache-dependency-path: web-cypress/package-lock.json
      - name: Install dependencies
        working-directory: web-cypress
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: web-cypress
        run: |
          npm run tsc
