---
name: . Static Type Check

'on':
  workflow_call:
    inputs:
      # Workflows
      workflow:
        required: true
        type: boolean
      # Languages
      python:
        required: true
        type: boolean
      opentofu:
        required: true
        type: boolean
      # Applications
      api-go:
        required: true
        type: boolean
      api-node:
        required: true
        type: boolean
      ethereum:
        required: true
        type: boolean
      grafana-hm-panel-plugin:
        required: true
        type: boolean
      mobile-android:
        required: true
        type: boolean
      mobile-react-native:
        required: true
        type: boolean
      web-cypress:
        required: true
        type: boolean
      web:
        required: true
        type: boolean

jobs:
  static-type-check-kotlin-mobile-android:
    name: Kotlin (mobile-android)
    if: ${{ inputs.workflow || inputs.mobile-android }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Java
        uses: actions/setup-java@v5.0.0
        with:
          distribution: corretto
          cache: gradle
          java-version-file: mobile/mobile-android/.java-version
      - name: Static type check Kotlin
        working-directory: mobile/mobile-android
        run: |
          ./gradlew detekt

  static-type-check-python:
    name: Python
    if: ${{ inputs.workflow || inputs.python }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.23
          enable-cache: true
          cache-dependency-glob: uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: .python-version
      - name: Install dependencies
        run: |
          uv sync --dev
      - name: Static type check Python
        run: |
          uv run poe static-type-check-python --package=aerospace.hm-aerosandbox
          uv run poe static-type-check-python --package=aerospace.hm-openaerostruct
          uv run poe static-type-check-python --package=aerospace.x-plane.rest-api
          uv run poe static-type-check-python --package=aerospace.x-plane.udp
          uv run poe static-type-check-python --package=api.api-python
          uv run poe static-type-check-python --package=api.api-rust
          uv run poe static-type-check-python --package=audio.automatic-speech-recognition.hm-faster-whisper
          uv run poe static-type-check-python --package=audio.automatic-speech-recognition.hm-speaches
          uv run poe static-type-check-python --package=audio.automatic-speech-recognition.hm-whisperx
          uv run poe static-type-check-python --package=audio.speaker-diarization.hm-diart
          uv run poe static-type-check-python --package=audio.speaker-diarization.hm-senko
          uv run poe static-type-check-python --package=audio.voice-activity-detector.hm-silero-vad
          uv run poe static-type-check-python --package=audio.voice-activity-detector.hm-webrtcvad
          uv run poe static-type-check-python --package=cloud-computing.hm-ray.applications.calculate
          uv run poe static-type-check-python --package=cloud-computing.hm-ray.applications.process-flight-data
          uv run poe static-type-check-python --package=cloud-platform.aws.amazon-sagemaker.pytorch-mnist
          uv run poe static-type-check-python --package=cloud-platform.aws.aws-parallelcluster.pcluster
          uv run poe static-type-check-python --package=computer-vision.hm-open3d
          uv run poe static-type-check-python --package=computer-vision.hm-pyvista.mount-saint-helens
          uv run poe static-type-check-python --package=computer-vision.hm-supervision.detect-objects
          uv run poe static-type-check-python --package=data-analytics.hm-cudf.analyze-transactions
          uv run poe static-type-check-python --package=data-analytics.hm-cupy
          uv run poe static-type-check-python --package=data-analytics.hm-daft.analyze-transactions
          uv run poe static-type-check-python --package=data-analytics.hm-geopandas
          uv run poe static-type-check-python --package=data-analytics.hm-marimo
          uv run poe static-type-check-python --package=data-analytics.hm-narwhals
          uv run poe static-type-check-python --package=data-analytics.hm-numba
          uv run poe static-type-check-python --package=data-analytics.hm-pandas.analyze-transactions
          uv run poe static-type-check-python --package=data-analytics.hm-polars.analyze-transactions-cpu
          uv run poe static-type-check-python --package=data-analytics.hm-polars.analyze-transactions-gpu
          uv run poe static-type-check-python --package=data-crawling.hm-crawl4ai
          uv run poe static-type-check-python --package=data-crawling.hm-firecrawl
          uv run poe static-type-check-python --package=data-distribution.arrow-flight.arrow-flight-client
          uv run poe static-type-check-python --package=data-distribution.rti-connext-dds
          uv run poe static-type-check-python --package=data-extraction.hm-docling
          uv run poe static-type-check-python --package=data-extraction.hm-mineru
          uv run poe static-type-check-python --package=data-extraction.hm-olmocr
          uv run poe static-type-check-python --package=data-orchestration.hm-airflow
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.calculate
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.daft-analysis
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.greet
          uv run poe static-type-check-python --package=data-orchestration.hm-prefect.workflows.print-platform
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.analyze-coffee-customers
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.find-retired-people-python
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.find-taxi-top-routes
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.find-taxi-top-routes-sql
          uv run poe static-type-check-python --package=data-processing.hm-spark.applications.recommend-movies
          uv run poe static-type-check-python --package=data-storage.delta-lake.read-delta-lake-by-amazon-athena
          uv run poe static-type-check-python --package=data-storage.delta-lake.read-delta-lake-by-trino
          uv run poe static-type-check-python --package=data-storage.delta-lake.write-to-delta-lake
          uv run poe static-type-check-python --package=data-storage.hm-duckdb.query-duckdb
          uv run poe static-type-check-python --package=data-storage.hm-duckdb.query-lance
          uv run poe static-type-check-python --package=data-storage.hm-duckdb.query-parquet
          uv run poe static-type-check-python --package=data-storage.hm-duckdb.query-protobuf
          uv run poe static-type-check-python --package=data-storage.hm-hdf5
          uv run poe static-type-check-python --package=data-storage.hm-lancedb
          uv run poe static-type-check-python --package=data-storage.hm-protobuf
          uv run poe static-type-check-python --package=data-storage.lance
          uv run poe static-type-check-python --package=data-visualization.grafana.hm-dashboard
          uv run poe static-type-check-python --package=data-visualization.hm-dash.csv-visualizer
          uv run poe static-type-check-python --package=data-visualization.hm-dash.parquet-visualizer
          uv run poe static-type-check-python --package=data-visualization.hm-plotly.heatmap
          uv run poe static-type-check-python --package=data-visualization.hm-pygwalker
          uv run poe static-type-check-python --package=data-visualization.iads.iads-data-manager.iads-config-reader
          uv run poe static-type-check-python --package=data-visualization.iads.iads-data-manager.iads-data-reader
          uv run poe static-type-check-python --package=embedded-system.decode-can-blf-data
          uv run poe static-type-check-python --package=embedded-system.decode-can-mf4-data
          uv run poe static-type-check-python --package=embedded-system.decode-can-trc-data
          uv run poe static-type-check-python --package=embedded-system.format-can-data
          uv run poe static-type-check-python --package=embedded-system.hm-serial
          uv run poe static-type-check-python --package=embedding.hm-imagebind
          uv run poe static-type-check-python --package=embedding.open-clip
          uv run poe static-type-check-python --package=hardware-in-the-loop.national-instruments.hm-pyvisa
          uv run poe static-type-check-python --package=hardware-in-the-loop.national-instruments.hm-tdms
          uv run poe static-type-check-python --package=hardware-in-the-loop.national-instruments.veristand.hm-veristand
          uv run poe static-type-check-python --package=llm-application.hm-langchain.applications.chat-pdf
          uv run poe static-type-check-python --package=llm-application.hm-langgraph.applications.chat-pdf
          uv run poe static-type-check-python --package=llm-application.hm-llama-index.applications.chat-pdf
          uv run poe static-type-check-python --package=llm-application.hm-pydantic-ai.applications.chat-pdf
          uv run poe static-type-check-python --package=llm-evaluation.hm-deepeval
          uv run poe static-type-check-python --package=llm-inference.hm-mlx-lm
          uv run poe static-type-check-python --package=llm-inference.hm-sglang
          uv run poe static-type-check-python --package=llm-inference.kv-caching
          uv run poe static-type-check-python --package=llm-inference.speculative-decoding
          uv run poe static-type-check-python --package=llm-post-training.fine-tuning.fine-tune-whisper
          uv run poe static-type-check-python --package=llm-post-training.fine-tuning.hm-axolotl
          uv run poe static-type-check-python --package=llm-post-training.fine-tuning.hm-llama-factory
          uv run poe static-type-check-python --package=llm-post-training.fine-tuning.hm-torchtune
          uv run poe static-type-check-python --package=llm-post-training.fine-tuning.hm-unsloth
          uv run poe static-type-check-python --package=llm-post-training.post-training-quantization
          uv run poe static-type-check-python --package=llm-training.automatic-mixed-precision
          uv run poe static-type-check-python --package=load-testing.hm-locust
          uv run poe static-type-check-python --package=machine-learning.convolutional-neural-network
          uv run poe static-type-check-python --package=machine-learning.feature-store
          uv run poe static-type-check-python --package=machine-learning.graph-neural-network
          uv run poe static-type-check-python --package=machine-learning.hm-cuml
          uv run poe static-type-check-python --package=machine-learning.hm-gradio.applications.classify-image
          uv run poe static-type-check-python --package=machine-learning.hm-kubeflow.pipelines.calculate
          uv run poe static-type-check-python --package=machine-learning.hm-kubeflow.pipelines.classify-mnist
          uv run poe static-type-check-python --package=machine-learning.hm-mlflow.experiments.classify-mnist
          uv run poe static-type-check-python --package=machine-learning.hm-mlflow.experiments.predict-diabetes
          uv run poe static-type-check-python --package=machine-learning.hm-nvidia-modulus
          uv run poe static-type-check-python --package=machine-learning.hm-scikit-learn
          uv run poe static-type-check-python --package=machine-learning.hm-streamlit.applications.live-line-chart
          uv run poe static-type-check-python --package=machine-learning.hm-streamlit.applications.map
          uv run poe static-type-check-python --package=machine-learning.hugging-face
          uv run poe static-type-check-python --package=machine-learning.hyperparameter-optimization
          uv run poe static-type-check-python --package=machine-learning.model-context-protocol
          uv run poe static-type-check-python --package=machine-learning.neural-forecasting.forecast-air-passenger-number
          uv run poe static-type-check-python --package=machine-learning.nvidia-dali
          uv run poe static-type-check-python --package=machine-learning.nvidia-triton-inference-server.amazon-sagemaker-triton-resnet-50.deploy
          uv run poe static-type-check-python --package=machine-learning.nvidia-triton-inference-server.amazon-sagemaker-triton-resnet-50.infer
          uv run poe static-type-check-python --package=machine-learning.reinforcement-learning.cart-pole
          uv run poe static-type-check-python --package=machine-learning.stable-diffusion
          uv run poe static-type-check-python --package=machine-learning.transformer
          uv run poe static-type-check-python --package=parallel-computing.hm-taichi.count-primes
          uv run poe static-type-check-python --package=parallel-computing.hm-taichi.fluid-solver
          uv run poe static-type-check-python --package=parallel-computing.hm-triton
          uv run poe static-type-check-python --package=physics.hm-genesis
          uv run poe static-type-check-python --package=quantum-computing
          uv run poe static-type-check-python --package=scientific-computing.hm-sunpy
          uv run poe static-type-check-python --package=scientific-computing.surrogate-model
          uv run poe static-type-check-python --package=security.hm-opal-client
          uv run poe static-type-check-python --package=system-tool.hm-xxhash
          uv run poe static-type-check-python --package=tokenization.byte-pair-encoding

  static-type-check-opentofu-production-airbyte:
    name: OpenTofu (production/airbyte)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/airbyte
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/airbyte
        run: |
          tofu validate

  static-type-check-opentofu-production-argo-cd:
    name: OpenTofu (production/argo-cd)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/argo-cd
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/argo-cd
        run: |
          tofu validate

  static-type-check-opentofu-production-aws-data:
    name: OpenTofu (production/aws/data)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/data
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/data
        run: |
          tofu validate

  static-type-check-opentofu-production-aws-general:
    name: OpenTofu (production/aws/general)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/general
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/general
        run: |
          tofu validate

  static-type-check-opentofu-production-aws-kubernetes:
    name: OpenTofu (production/aws/kubernetes)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/kubernetes
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/kubernetes
        run: |
          tofu validate

  static-type-check-opentofu-production-aws-network:
    name: OpenTofu (production/aws/network)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/network
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/aws/network
        run: |
          tofu validate

  static-type-check-opentofu-production-harbor:
    name: OpenTofu (production/harbor)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/harbor
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/harbor
        run: |
          tofu validate

  static-type-check-opentofu-production-nebius-applications:
    name: OpenTofu (production/nebius/applications)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/applications
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/applications
        run: |
          tofu validate

  static-type-check-opentofu-production-nebius-data:
    name: OpenTofu (production/nebius/data)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/data
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/data
        run: |
          tofu validate

  static-type-check-opentofu-production-nebius-general:
    name: OpenTofu (production/nebius/general)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/general
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/general
        run: |
          tofu validate

  static-type-check-opentofu-production-nebius-kubernetes:
    name: OpenTofu (production/nebius/kubernetes)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/kubernetes
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/nebius/kubernetes
        run: |
          tofu validate

  static-type-check-opentofu-production-snowflake-account:
    name: OpenTofu (production/snowflake/account)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/snowflake/account
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/snowflake/account
        run: |
          tofu validate

  static-type-check-opentofu-production-snowflake-data:
    name: OpenTofu (production/snowflake/data)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/snowflake/data
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/snowflake/data
        run: |
          tofu validate

  static-type-check-opentofu-production-snowflake-general:
    name: OpenTofu (production/snowflake/general)
    if: ${{ inputs.workflow || inputs.opentofu }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up OpenTofu
        uses: opentofu/setup-opentofu@v1.0.6
      - name: Initialize OpenTofu
        working-directory: infrastructure/opentofu/environments/production/snowflake/general
        run: |
          tofu init -backend=false
      - name: Static type check OpenTofu
        working-directory: infrastructure/opentofu/environments/production/snowflake/general
        run: |
          tofu validate

  static-type-check-typescript-api-node:
    name: TypeScript (api-node)
    if: ${{ inputs.workflow || inputs.api-node }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: api/api-node/.node-version
          cache: npm
          cache-dependency-path: api/api-node/package-lock.json
      - name: Install dependencies
        working-directory: api/api-node
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: api/api-node
        run: |
          npm run static-type-check-typescript

  static-type-check-typescript-ethereum:
    name: TypeScript (ethereum)
    if: ${{ inputs.workflow || inputs.ethereum }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: ethereum/.node-version
          cache: npm
          cache-dependency-path: ethereum/package-lock.json
      - name: Install dependencies
        working-directory: ethereum
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: ethereum
        run: |
          npm run static-type-check-typescript

  static-type-check-typescript-grafana-hm-panel-plugin:
    name: TypeScript (grafana-hm-panel-plugin)
    if: ${{ inputs.workflow || inputs.grafana-hm-panel-plugin }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: data-visualization/grafana/hm-panel-plugin/.node-version
          cache: npm
          cache-dependency-path: data-visualization/grafana/hm-panel-plugin/package-lock.json
      - name: Install dependencies
        working-directory: data-visualization/grafana/hm-panel-plugin
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: data-visualization/grafana/hm-panel-plugin
        run: |
          npm run static-type-check-typescript

  static-type-check-typescript-mobile-react-native:
    name: TypeScript (mobile-react-native)
    if: ${{ inputs.workflow || inputs.mobile-react-native }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: mobile/mobile-react-native/.node-version
          cache: npm
          cache-dependency-path: mobile/mobile-react-native/package-lock.json
      - name: Install dependencies
        working-directory: mobile/mobile-react-native
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: mobile/mobile-react-native
        run: |
          npm run static-type-check-typescript

  static-type-check-typescript-web:
    name: TypeScript (web)
    if: ${{ inputs.workflow || inputs.web }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: web/.node-version
          cache: npm
          cache-dependency-path: web/package-lock.json
      - name: Install dependencies
        working-directory: web
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: web
        run: |
          npm run static-type-check-typescript

  static-type-check-typescript-web-cypress:
    name: TypeScript (web-cypress)
    if: ${{ inputs.workflow || inputs.web-cypress }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Set up Node.js
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: web-cypress/.node-version
          cache: npm
          cache-dependency-path: web-cypress/package-lock.json
      - name: Install dependencies
        working-directory: web-cypress
        run: |
          npm ci
      - name: Static type check TypeScript
        working-directory: web-cypress
        run: |
          npm run static-type-check-typescript
