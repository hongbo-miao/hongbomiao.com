---
name: . Test Machine Learning

'on':
  workflow_call:
    inputs:
      # Workflows
      workflow:
        required: true
        type: boolean
      # Applications
      amazon-sagemaker-triton-resnet-50-deploy:
        required: true
        type: boolean
      amazon-sagemaker-triton-resnet-50-infer:
        required: true
        type: boolean
      automatic-mixed-precision:
        required: true
        type: boolean
      byte-pair-encoding:
        required: true
        type: boolean
      convolutional-neural-network:
        required: true
        type: boolean
      feature-store:
        required: true
        type: boolean
      fine-tune-whisper:
        required: true
        type: boolean
      graph-neural-network:
        required: true
        type: boolean
      hm-autogluon:
        required: true
        type: boolean
      hm-axolotl:
        required: true
        type: boolean
      hm-crawl4ai:
        required: true
        type: boolean
      hm-cuml:
        required: true
        type: boolean
      hm-deepeval:
        required: true
        type: boolean
      hm-diart:
        required: true
        type: boolean
      hm-docling:
        required: true
        type: boolean
      hm-faster-whisper:
        required: true
        type: boolean
      hm-firecrawl:
        required: true
        type: boolean
      hm-flax:
        required: true
        type: boolean
      hm-gradio-classify-image:
        required: true
        type: boolean
      hm-imagebind:
        required: true
        type: boolean
      hm-kubeflow-calculate:
        required: true
        type: boolean
      hm-kubeflow-classify-mnist:
        required: true
        type: boolean
      hm-langchain-chat-pdf:
        required: true
        type: boolean
      hm-langgraph-chat-pdf:
        required: true
        type: boolean
      hm-llama-factory:
        required: true
        type: boolean
      hm-llama-index-chat-pdf:
        required: true
        type: boolean
      hm-mineru:
        required: true
        type: boolean
      hm-mlflow-classify-mnist:
        required: true
        type: boolean
      hm-mlflow-predict-diabetes:
        required: true
        type: boolean
      hm-mlx-lm:
        required: true
        type: boolean
      hm-nvidia-modulus:
        required: true
        type: boolean
      hm-olmocr:
        required: true
        type: boolean
      hm-pydantic-ai-chat-pdf:
        required: true
        type: boolean
      hm-senko:
        required: true
        type: boolean
      hm-scikit-learn:
        required: true
        type: boolean
      hm-sglang:
        required: true
        type: boolean
      hm-silero-vad:
        required: true
        type: boolean
      hm-speaches:
        required: true
        type: boolean
      hm-streamlit-live-line-chart:
        required: true
        type: boolean
      hm-streamlit-map:
        required: true
        type: boolean
      hm-torchtune:
        required: true
        type: boolean
      hm-unsloth:
        required: true
        type: boolean
      hm-webrtcvad:
        required: true
        type: boolean
      hm-whisperx:
        required: true
        type: boolean
      hugging-face-analyze-sentiment:
        required: true
        type: boolean
      hyperparameter-optimization:
        required: true
        type: boolean
      kv-caching:
        required: true
        type: boolean
      model-context-protocol:
        required: true
        type: boolean
      neural-forecasting-forecast-air-passenger-number:
        required: true
        type: boolean
      nvidia-dali:
        required: true
        type: boolean
      open-clip:
        required: true
        type: boolean
      post-training-quantization:
        required: true
        type: boolean
      qwen-vl:
        required: true
        type: boolean
      reinforcement-learning-cart-pole:
        required: true
        type: boolean
      speculative-decoding:
        required: true
        type: boolean
      stable-diffusion:
        required: true
        type: boolean
      transformer:
        required: true
        type: boolean

jobs:
  amazon-sagemaker-triton-resnet-50-deploy-test:
    name: Amazon SageMaker Triton ResNet 50 (Deploy) | Test
    if: ${{ inputs.workflow || inputs.amazon-sagemaker-triton-resnet-50-deploy }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy/.python-version
      - name: Install dependencies
        working-directory: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/deploy

  amazon-sagemaker-triton-resnet-50-infer-test:
    name: Amazon SageMaker Triton ResNet 50 (Infer) | Test
    if: ${{ inputs.workflow || inputs.amazon-sagemaker-triton-resnet-50-infer }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer/.python-version
      - name: Install dependencies
        working-directory: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/nvidia-triton-inference-server/amazon-sagemaker-triton-resnet-50/infer

  scikit-learn-test:
    name: scikit-learn | Test
    if: ${{ inputs.workflow || inputs.hm-scikit-learn }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-scikit-learn/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-scikit-learn/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-scikit-learn
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-scikit-learn
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-scikit-learn

  cuml-test:
    name: cuML | Test
    if: ${{ inputs.workflow || inputs.hm-cuml }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-cuml/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-cuml/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-cuml
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-cuml
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-cuml

  hugging-face-analyze-sentiment-test:
    name: Hugging Face (analyze-sentiment) | Test
    if: ${{ inputs.workflow || inputs.hugging-face-analyze-sentiment }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hugging-face/analyze-sentiment/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hugging-face/analyze-sentiment/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hugging-face/analyze-sentiment
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hugging-face/analyze-sentiment
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hugging-face/analyze-sentiment

  gradio-classify-image-test:
    name: Gradio (classify-image) | Test
    if: ${{ inputs.workflow || inputs.hm-gradio-classify-image }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-gradio/applications/classify-image/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-gradio/applications/classify-image/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-gradio/applications/classify-image
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-gradio/applications/classify-image
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-gradio/applications/classify-image

  streamlit-live-line-chart-test:
    name: Streamlit (live-line-chart) | Test
    if: ${{ inputs.workflow || inputs.hm-streamlit-live-line-chart }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-streamlit/applications/live-line-chart/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-streamlit/applications/live-line-chart/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-streamlit/applications/live-line-chart
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-streamlit/applications/live-line-chart
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-streamlit/applications/live-line-chart

  streamlit-map-test:
    name: Streamlit (map) | Test
    if: ${{ inputs.workflow || inputs.hm-streamlit-map }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-streamlit/applications/map/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-streamlit/applications/map/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-streamlit/applications/map
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-streamlit/applications/map
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-streamlit/applications/map

  flax-test:
    name: Flax | Test
    if: ${{ inputs.workflow || inputs.hm-flax }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-flax/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-flax/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-flax
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-flax
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-flax

  autogluon-test:
    name: AutoGluon | Test
    if: ${{ inputs.workflow || inputs.hm-autogluon }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-autogluon/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-autogluon/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-autogluon
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-autogluon
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-autogluon

  nvidia-dali-test:
    name: NVIDIA DALI | Test
    if: ${{ false }}
    # if: ${{ inputs.workflow || inputs.nvidia-dali }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/nvidia-dali/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/nvidia-dali/.python-version
      - name: Install dependencies
        working-directory: machine-learning/nvidia-dali
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/nvidia-dali
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/nvidia-dali

  modulus-test:
    name: NVIDIA Modulus | Test
    if: ${{ inputs.workflow || inputs.hm-nvidia-modulus }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-nvidia-modulus/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-nvidia-modulus/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-nvidia-modulus
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-nvidia-modulus
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-nvidia-modulus

  feature-store-test:
    name: Feature Store | Test
    if: ${{ inputs.workflow || inputs.feature-store }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/feature-store/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/feature-store/.python-version
      - name: Install dependencies
        working-directory: machine-learning/feature-store
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/feature-store
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/feature-store

  crawl4ai-test:
    name: Crawl4AI | Test
    if: ${{ inputs.workflow || inputs.hm-crawl4ai }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: data-crawling/hm-crawl4ai/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: data-crawling/hm-crawl4ai/.python-version
      - name: Install dependencies
        working-directory: data-crawling/hm-crawl4ai
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-crawling/hm-crawl4ai
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: data-crawling/hm-crawl4ai

  firecrawl-test:
    name: Firecrawl | Test
    if: ${{ inputs.workflow || inputs.hm-firecrawl }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: data-crawling/hm-firecrawl/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: data-crawling/hm-firecrawl/.python-version
      - name: Install dependencies
        working-directory: data-crawling/hm-firecrawl
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-crawling/hm-firecrawl
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: data-crawling/hm-firecrawl

  mineru-test:
    name: MinerU | Test
    if: ${{ inputs.workflow || inputs.hm-mineru }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: data-extraction/hm-mineru/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: data-extraction/hm-mineru/.python-version
      - name: Install dependencies
        working-directory: data-extraction/hm-mineru
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-extraction/hm-mineru
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: data-extraction/hm-mineru

  olmocr-test:
    name: olmOCR | Test
    if: ${{ inputs.workflow || inputs.hm-olmocr }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: data-extraction/hm-olmocr/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: data-extraction/hm-olmocr/.python-version
      - name: Install dependencies
        working-directory: data-extraction/hm-olmocr
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-extraction/hm-olmocr
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: data-extraction/hm-olmocr

  docling-test:
    name: Docling | Test
    if: ${{ inputs.workflow || inputs.hm-docling }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: data-extraction/hm-docling/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: data-extraction/hm-docling/.python-version
      - name: Install dependencies
        working-directory: data-extraction/hm-docling
        run: |
          uv sync --dev
      - name: Test
        working-directory: data-extraction/hm-docling
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: data-extraction/hm-docling

  byte-pair-encoding-test:
    name: Byte-Pair Encoding | Test
    if: ${{ inputs.workflow || inputs.byte-pair-encoding }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: tokenization/byte-pair-encoding/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: tokenization/byte-pair-encoding/.python-version
      - name: Install dependencies
        working-directory: tokenization/byte-pair-encoding
        run: |
          uv sync --dev
      - name: Test
        working-directory: tokenization/byte-pair-encoding
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: tokenization/byte-pair-encoding

  imagebind-test:
    name: ImageBind | Test
    if: ${{ inputs.workflow || inputs.hm-imagebind }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: embedding/hm-imagebind/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: embedding/hm-imagebind/.python-version
      - name: Install dependencies
        working-directory: embedding/hm-imagebind
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedding/hm-imagebind
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: embedding/hm-imagebind

  open-clip-test:
    name: OpenCLIP | Test
    if: ${{ inputs.workflow || inputs.open-clip }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: embedding/open-clip/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: embedding/open-clip/.python-version
      - name: Install dependencies
        working-directory: embedding/open-clip
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedding/open-clip
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: embedding/open-clip

  automatic-mixed-precision-test:
    name: Automatic Mixed Precision | Test
    if: ${{ inputs.workflow || inputs.automatic-mixed-precision }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-training/automatic-mixed-precision/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-training/automatic-mixed-precision/.python-version
      - name: Install dependencies
        working-directory: llm-training/automatic-mixed-precision
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-training/automatic-mixed-precision
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-training/automatic-mixed-precision

  sglang-test:
    name: SGLang | Test
    if: ${{ inputs.workflow || inputs.hm-sglang }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install NVIDIA CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.28
        id: cuda-toolkit
        with:
          cuda: 12.9.0
          method: network
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-inference/hm-sglang/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-inference/hm-sglang/.python-version
      - name: Install dependencies
        working-directory: llm-inference/hm-sglang
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-inference/hm-sglang
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-inference/hm-sglang

  mlx-lm-test:
    name: MLX LM | Test
    if: ${{ inputs.workflow || inputs.hm-mlx-lm }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-inference/hm-mlx-lm/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-inference/hm-mlx-lm/.python-version
      - name: Install dependencies
        working-directory: llm-inference/hm-mlx-lm
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-inference/hm-mlx-lm
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-inference/hm-mlx-lm

  kv-caching-test:
    name: KV Caching | Test
    if: ${{ inputs.workflow || inputs.kv-caching }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-inference/kv-caching/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-inference/kv-caching/.python-version
      - name: Install dependencies
        working-directory: llm-inference/kv-caching
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-inference/kv-caching
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-inference/kv-caching

  speculative-decoding-test:
    name: Speculative Decoding | Test
    if: ${{ inputs.workflow || inputs.speculative-decoding }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-inference/speculative-decoding/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-inference/speculative-decoding/.python-version
      - name: Install dependencies
        working-directory: llm-inference/speculative-decoding
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-inference/speculative-decoding
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-inference/speculative-decoding

  kubeflow-calculate-test:
    name: Kubeflow (calculate) | Test
    if: ${{ inputs.workflow || inputs.hm-kubeflow-calculate }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-kubeflow/pipelines/calculate/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-kubeflow/pipelines/calculate/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-kubeflow/pipelines/calculate
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-kubeflow/pipelines/calculate
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-kubeflow/pipelines/calculate

  kubeflow-classify-mnist-test:
    name: Kubeflow (classify-mnist) | Test
    if: ${{ inputs.workflow || inputs.hm-kubeflow-classify-mnist }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-kubeflow/pipelines/classify-mnist/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-kubeflow/pipelines/classify-mnist/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-kubeflow/pipelines/classify-mnist
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-kubeflow/pipelines/classify-mnist
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-kubeflow/pipelines/classify-mnist

  langchain-chat-pdf-test:
    name: LangChain (chat-pdf) | Test
    if: ${{ inputs.workflow || inputs.hm-langchain-chat-pdf }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-application/hm-langchain/applications/chat-pdf/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-application/hm-langchain/applications/chat-pdf/.python-version
      - name: Install dependencies
        working-directory: llm-application/hm-langchain/applications/chat-pdf
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-application/hm-langchain/applications/chat-pdf
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-application/hm-langchain/applications/chat-pdf

  pydantic-ai-chat-pdf-test:
    name: PydanticAI (chat-pdf) | Test
    if: ${{ inputs.workflow || inputs.hm-pydantic-ai-chat-pdf }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-application/hm-pydantic-ai/applications/chat-pdf/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-application/hm-pydantic-ai/applications/chat-pdf/.python-version
      - name: Install dependencies
        working-directory: llm-application/hm-pydantic-ai/applications/chat-pdf
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-application/hm-pydantic-ai/applications/chat-pdf
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-application/hm-pydantic-ai/applications/chat-pdf

  langgraph-chat-pdf-test:
    name: LangGraph (chat-pdf) | Test
    if: ${{ inputs.workflow || inputs.hm-langgraph-chat-pdf }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-application/hm-langgraph/applications/chat-pdf/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-application/hm-langgraph/applications/chat-pdf/.python-version
      - name: Install dependencies
        working-directory: llm-application/hm-langgraph/applications/chat-pdf
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-application/hm-langgraph/applications/chat-pdf
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-application/hm-langgraph/applications/chat-pdf

  llama-index-chat-pdf-test:
    name: LlamaIndex (chat-pdf) | Test
    if: ${{ inputs.workflow || inputs.hm-llama-index-chat-pdf }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-application/hm-llama-index/applications/chat-pdf/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-application/hm-llama-index/applications/chat-pdf/.python-version
      - name: Install dependencies
        working-directory: llm-application/hm-llama-index/applications/chat-pdf
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-application/hm-llama-index/applications/chat-pdf
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-application/hm-llama-index/applications/chat-pdf

  model-context-protocol-test:
    name: Model Context Protocol | Test
    if: ${{ inputs.workflow || inputs.model-context-protocol }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/model-context-protocol/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/model-context-protocol/.python-version
      - name: Install dependencies
        working-directory: machine-learning/model-context-protocol
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/model-context-protocol
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/model-context-protocol

  mlflow-classify-mnist-test:
    name: MLflow (classify-mnist) | Test
    if: ${{ inputs.workflow || inputs.hm-mlflow-classify-mnist }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-mlflow/experiments/classify-mnist/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-mlflow/experiments/classify-mnist/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-mlflow/experiments/classify-mnist
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-mlflow/experiments/classify-mnist
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-mlflow/experiments/classify-mnist

  mlflow-predict-diabetes-test:
    name: MLflow (predict-diabetes) | Test
    if: ${{ inputs.workflow || inputs.hm-mlflow-predict-diabetes }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hm-mlflow/experiments/predict-diabetes/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hm-mlflow/experiments/predict-diabetes/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hm-mlflow/experiments/predict-diabetes
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hm-mlflow/experiments/predict-diabetes
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hm-mlflow/experiments/predict-diabetes

  neural-forecasting-forecast-air-passenger-number-test:
    name: Neural Forecasting (forecast-air-passenger-number) | Test
    if: ${{ inputs.workflow || inputs.neural-forecasting-forecast-air-passenger-number }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/neural-forecasting/forecast-air-passenger-number/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/neural-forecasting/forecast-air-passenger-number/.python-version
      - name: Install dependencies
        working-directory: machine-learning/neural-forecasting/forecast-air-passenger-number
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/neural-forecasting/forecast-air-passenger-number
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/neural-forecasting/forecast-air-passenger-number

  reinforcement-learning-cart-pole-test:
    name: Reinforcement Learning (cart-pole) | Test
    if: ${{ inputs.workflow || inputs.reinforcement-learning-cart-pole }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/reinforcement-learning/cart-pole/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/reinforcement-learning/cart-pole/.python-version
      - name: Install dependencies
        working-directory: machine-learning/reinforcement-learning/cart-pole
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/reinforcement-learning/cart-pole
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/reinforcement-learning/cart-pole

  silero-vad-test:
    name: Silero VAD | Test
    if: ${{ inputs.workflow || inputs.hm-silero-vad }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/voice-activity-detector/hm-silero-vad/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/voice-activity-detector/hm-silero-vad/.python-version
      - name: Install dependencies
        working-directory: audio/voice-activity-detector/hm-silero-vad
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/voice-activity-detector/hm-silero-vad
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/voice-activity-detector/hm-silero-vad

  webrtcvad-test:
    name: webrtcvad | Test
    if: ${{ inputs.workflow || inputs.hm-webrtcvad }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/voice-activity-detector/hm-webrtcvad/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/voice-activity-detector/hm-webrtcvad/.python-version
      - name: Install dependencies
        working-directory: audio/voice-activity-detector/hm-webrtcvad
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/voice-activity-detector/hm-webrtcvad
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/voice-activity-detector/hm-webrtcvad

  senko-test:
    name: Senko | Test
    if: ${{ inputs.workflow || inputs.hm-senko }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/speaker-diarization/hm-senko/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/speaker-diarization/hm-senko/.python-version
      - name: Install dependencies
        working-directory: audio/speaker-diarization/hm-senko
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/speaker-diarization/hm-senko
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/speaker-diarization/hm-senko

  diart-test:
    name: Diart | Test
    if: ${{ inputs.workflow || inputs.hm-diart }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/speaker-diarization/hm-diart/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/speaker-diarization/hm-diart/.python-version
      - name: Install dependencies
        working-directory: audio/speaker-diarization/hm-diart
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/speaker-diarization/hm-diart
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/speaker-diarization/hm-diart

  faster-whisper-test:
    name: Faster Whisper | Test
    if: ${{ inputs.workflow || inputs.hm-faster-whisper }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/automatic-speech-recognition/hm-faster-whisper/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/automatic-speech-recognition/hm-faster-whisper/.python-version
      - name: Install dependencies
        working-directory: audio/automatic-speech-recognition/hm-faster-whisper
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/automatic-speech-recognition/hm-faster-whisper
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/automatic-speech-recognition/hm-faster-whisper

  whisperx-test:
    name: WhisperX | Test
    if: ${{ inputs.workflow || inputs.hm-whisperx }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/automatic-speech-recognition/hm-whisperx/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/automatic-speech-recognition/hm-whisperx/.python-version
      - name: Install dependencies
        working-directory: audio/automatic-speech-recognition/hm-whisperx
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/automatic-speech-recognition/hm-whisperx
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/automatic-speech-recognition/hm-whisperx

  speaches-test:
    name: Speaches | Test
    if: ${{ inputs.workflow || inputs.hm-speaches }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install NVIDIA CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.28
        id: cuda-toolkit
        with:
          cuda: 12.9.0
          method: network
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: audio/automatic-speech-recognition/hm-speaches/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: audio/automatic-speech-recognition/hm-speaches/.python-version
      - name: Install dependencies
        working-directory: audio/automatic-speech-recognition/hm-speaches
        run: |
          uv sync --dev
      - name: Test
        working-directory: audio/automatic-speech-recognition/hm-speaches
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: audio/automatic-speech-recognition/hm-speaches

  stable-diffusion-test:
    name: Stable Diffusion | Test
    if: ${{ inputs.workflow || inputs.stable-diffusion }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/stable-diffusion/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/stable-diffusion/.python-version
      - name: Install dependencies
        working-directory: machine-learning/stable-diffusion
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/stable-diffusion
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/stable-diffusion

  transformer-test:
    name: Transformer | Test
    if: ${{ inputs.workflow || inputs.transformer }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/transformer/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/transformer/.python-version
      - name: Install dependencies
        working-directory: machine-learning/transformer
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/transformer
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/transformer

  hyperparameter-optimization-test:
    name: Hyperparameter Optimization | Test
    if: ${{ inputs.workflow || inputs.hyperparameter-optimization }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/hyperparameter-optimization/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/hyperparameter-optimization/.python-version
      - name: Install dependencies
        working-directory: machine-learning/hyperparameter-optimization
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/hyperparameter-optimization
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/hyperparameter-optimization

  post-training-quantization-test:
    name: Post-Training Quantization | Test
    if: ${{ inputs.workflow || inputs.post-training-quantization }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-post-training/post-training-quantization/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-post-training/post-training-quantization/.python-version
      - name: Install dependencies
        working-directory: llm-post-training/post-training-quantization
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-post-training/post-training-quantization
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-post-training/post-training-quantization

  axolotl-test:
    name: Axolotl | Test
    # if: ${{ inputs.workflow || inputs.hm-axolotl }}
    if: ${{ false }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-post-training/fine-tuning/hm-axolotl/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-post-training/fine-tuning/hm-axolotl/.python-version
      - name: Install dependencies
        working-directory: llm-post-training/fine-tuning/hm-axolotl
        run: |
          uv sync --extra=build
          uv sync --extra=build --extra=compile
          uv sync --extra=build --extra=compile --dev
      - name: Test
        working-directory: llm-post-training/fine-tuning/hm-axolotl
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-post-training/fine-tuning/hm-axolotl

  llama-factory-test:
    name: LLaMA-Factory | Test
    if: ${{ inputs.workflow || inputs.hm-llama-factory }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-post-training/fine-tuning/hm-llama-factory/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-post-training/fine-tuning/hm-llama-factory/.python-version
      - name: Install dependencies
        working-directory: llm-post-training/fine-tuning/hm-llama-factory
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-post-training/fine-tuning/hm-llama-factory
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-post-training/fine-tuning/hm-llama-factory

  torchtune-test:
    name: torchtune | Test
    if: ${{ inputs.workflow || inputs.hm-torchtune }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-post-training/fine-tuning/hm-torchtune/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-post-training/fine-tuning/hm-torchtune/.python-version
      - name: Install dependencies
        working-directory: llm-post-training/fine-tuning/hm-torchtune
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-post-training/fine-tuning/hm-torchtune
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-post-training/fine-tuning/hm-torchtune

  unsloth-test:
    name: Unsloth | Test
    if: ${{ inputs.workflow || inputs.hm-unsloth }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-post-training/fine-tuning/hm-unsloth/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-post-training/fine-tuning/hm-unsloth/.python-version
      - name: Install dependencies
        working-directory: llm-post-training/fine-tuning/hm-unsloth
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-post-training/fine-tuning/hm-unsloth
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-post-training/fine-tuning/hm-unsloth

  fine-tune-whisper-test:
    name: Fine Tune Whisper | Test
    if: ${{ inputs.workflow || inputs.fine-tune-whisper }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-post-training/fine-tuning/fine-tune-whisper/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-post-training/fine-tuning/fine-tune-whisper/.python-version
      - name: Install dependencies
        working-directory: llm-post-training/fine-tuning/fine-tune-whisper
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-post-training/fine-tuning/fine-tune-whisper
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-post-training/fine-tuning/fine-tune-whisper

  deepeval-test:
    name: DeepEval | Test
    # if: ${{ inputs.workflow || inputs.hm-deepeval }}
    if: ${{ false }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: llm-evaluation/hm-deepeval/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: llm-evaluation/hm-deepeval/.python-version
      - name: Install dependencies
        working-directory: llm-evaluation/hm-deepeval
        run: |
          uv sync --dev
      - name: Test
        working-directory: llm-evaluation/hm-deepeval
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: llm-evaluation/hm-deepeval

  qwen-vl-test:
    name: Qwen VL | Test
    if: ${{ inputs.workflow || inputs.qwen-vl }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: vision-language-model/qwen-vl/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: vision-language-model/qwen-vl/.python-version
      - name: Install dependencies
        working-directory: vision-language-model/qwen-vl
        run: |
          uv sync --dev
      - name: Test
        working-directory: vision-language-model/qwen-vl
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: vision-language-model/qwen-vl

  convolutional-neural-network-test:
    name: CNN | Test
    if: ${{ inputs.workflow || inputs.convolutional-neural-network }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/convolutional-neural-network/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/convolutional-neural-network/.python-version
      - name: Install dependencies
        working-directory: machine-learning/convolutional-neural-network
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/convolutional-neural-network
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/convolutional-neural-network

  graph-neural-network-test:
    name: GNN | Test
    if: ${{ inputs.workflow || inputs.graph-neural-network }}
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/graph-neural-network/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/graph-neural-network/.python-version
      - name: Install dependencies
        working-directory: machine-learning/graph-neural-network
        run: |
          uv sync --dev
      - name: Test
        working-directory: machine-learning/graph-neural-network
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: hongbo-miao/hongbomiao.com
          directory: machine-learning/graph-neural-network

  graph-neural-network-train:
    name: GNN | Train
    if: ${{ inputs.workflow || inputs.graph-neural-network }}
    runs-on: ubuntu-24.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
      - name: Install uv
        uses: astral-sh/setup-uv@v6.8.0
        with:
          version: 0.8.22
          enable-cache: true
          cache-dependency-glob: machine-learning/graph-neural-network/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v6.0.0
        with:
          python-version-file: machine-learning/graph-neural-network/.python-version
      - name: Install dependencies
        working-directory: machine-learning/graph-neural-network
        run: |
          uv sync --dev
      - name: Train model
        working-directory: machine-learning/graph-neural-network
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          uv run poe dev --dataset=ogbg-molhiv --gnn=gcn --feature=simple --epochs=2
