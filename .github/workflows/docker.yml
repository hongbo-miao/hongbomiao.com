name: Docker

on:
  push:
    branches:
      - main

jobs:
  push-web:
    name: Push web to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./web/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-api-node:
    name: Push api-node to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api-node/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-api-node:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-graphql-server:
    name: Push graphql-server to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api-go/build/package/graphql_server/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-graphql-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-grpc-server:
    name: Push grpc-server to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api-go/build/package/grpc_server/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-grpc-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-config-loader:
    name: Push config-loader to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api-go/build/package/config_loader/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-config-loader:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-decision-logger:
    name: Push decision-logger to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api-go/build/package/decision_logger/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-decision-logger:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-hm-opal-client:
    name: Push opal-client to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./hm-opal-client/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-opal-client:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-kafka-connect:
    name: Push kafka-connect to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./kafka-connect/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-kafka-connect:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-rasa-action-server:
    name: Push rasa-action-server to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./chatbot/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-rasa-action-server:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-hm-streaming:
    name: Push hm-streaming to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve the secret and decode it to a file
        working-directory: streaming/src/main/resources
        env:
          PROPERTIES_BASE64: ${{ secrets.HM_STEAMING_APPLICATION_PROPERTIES_BASE64 }}
        run: |
          echo $HM_STEAMING_APPLICATION_PROPERTIES_BASE64 | base64 --decode > application-production.properties
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./streaming/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-streaming:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-hm-keydb:
    name: Push hm-keydb to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get redisgraph.so
        working-directory: hm-keydb
        run: |
          docker create --cidfile=/tmp/cid.txt redislabs/redisgraph:latest
          docker cp $(cat /tmp/cid.txt):/usr/lib/redis/modules/redisgraph.so ./modules/
          docker container rm $(cat /tmp/cid.txt)
          rm -f /tmp/cid.txt
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./hm-keydb/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-keydb:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-hm-traefik:
    name: Push hm-traefik to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./hm-traefik/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-traefik:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push-hm-alpine:
    name: Push hm-alpine to GitHub Container Registry
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./hm-alpine/Dockerfile
          push: true
          tags: ghcr.io/hongbo-miao/hm-alpine:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Print Docker image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
