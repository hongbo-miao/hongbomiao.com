---
name: . Test Embedded System

'on':
  workflow_call:
    inputs:
      # Workflows
      workflow:
        required: true
        type: boolean
      # Applications
      decode-can-blf-data:
        required: true
        type: boolean
      decode-can-mf4-data:
        required: true
        type: boolean
      decode-can-trc-data:
        required: true
        type: boolean
      format-can-data:
        required: true
        type: boolean
      hm-serial:
        required: true
        type: boolean
      pack-unpack-data:
        required: true
        type: boolean

jobs:
  decode-can-blf-data-test:
    name: Decode CAN BLF Data | Test
    if: ${{ inputs.workflow || inputs.decode-can-blf-data }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: 0.6.14
          enable-cache: true
          cache-dependency-glob: embedded-system/decode-can-blf-data/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version-file: embedded-system/decode-can-blf-data/pyproject.toml
      - name: Install dependencies
        working-directory: embedded-system/decode-can-blf-data
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedded-system/decode-can-blf-data
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          directory: embedded-system/decode-can-blf-data

  decode-can-mf4-data-test:
    name: Decode CAN MF4 Data | Test
    if: ${{ inputs.workflow || inputs.decode-can-mf4-data }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: 0.6.14
          enable-cache: true
          cache-dependency-glob: embedded-system/decode-can-mf4-data/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version-file: embedded-system/decode-can-mf4-data/pyproject.toml
      - name: Install dependencies
        working-directory: embedded-system/decode-can-mf4-data
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedded-system/decode-can-mf4-data
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          directory: embedded-system/decode-can-mf4-data

  decode-can-trc-data-test:
    name: Decode CAN TRC Data | Test
    if: ${{ inputs.workflow || inputs.decode-can-trc-data }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: 0.6.14
          enable-cache: true
          cache-dependency-glob: embedded-system/decode-can-trc-data/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version-file: embedded-system/decode-can-trc-data/pyproject.toml
      - name: Install dependencies
        working-directory: embedded-system/decode-can-trc-data
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedded-system/decode-can-trc-data
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          directory: embedded-system/decode-can-trc-data

  format-can-data-test:
    name: Format CAN Data | Test
    if: ${{ inputs.workflow || inputs.format-can-data }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: 0.6.14
          enable-cache: true
          cache-dependency-glob: embedded-system/format-can-data/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version-file: embedded-system/format-can-data/pyproject.toml
      - name: Install dependencies
        working-directory: embedded-system/format-can-data
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedded-system/format-can-data
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          directory: embedded-system/format-can-data

  serial-test:
    name: Serial | Test
    if: ${{ inputs.workflow || inputs.hm-serial }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: 0.6.14
          enable-cache: true
          cache-dependency-glob: embedded-system/hm-serial/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version-file: embedded-system/hm-serial/pyproject.toml
      - name: Install dependencies
        working-directory: embedded-system/hm-serial
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedded-system/hm-serial
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          directory: embedded-system/hm-serial

  pack-unpack-data-test:
    name: Pack Unpack Data | Test
    if: ${{ inputs.workflow || inputs.pack-unpack-data }}
    runs-on: ubuntu-24.04
    environment: test
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v6.0.1
        with:
          version: 0.6.14
          enable-cache: true
          cache-dependency-glob: embedded-system/pack-unpack-data/uv.lock
      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version-file: embedded-system/pack-unpack-data/pyproject.toml
      - name: Install dependencies
        working-directory: embedded-system/pack-unpack-data
        run: |
          uv sync --dev
      - name: Test
        working-directory: embedded-system/pack-unpack-data
        run: |
          uv run poe test-coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          directory: embedded-system/pack-unpack-data
